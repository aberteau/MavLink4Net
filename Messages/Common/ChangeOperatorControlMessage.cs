//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// Request to control this MAV
    /// </summary>
    /// <remarks>
    /// CHANGE_OPERATOR_CONTROL
    /// </remarks>
    public class ChangeOperatorControlMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// System the GCS requests control for
        /// </summary>
        /// <remarks>
        /// target_system
        /// </remarks>
        private byte _targetSystem;
        
        /// <summary>
        /// 0: request control of this MAV, 1: Release control of this MAV
        /// </summary>
        /// <remarks>
        /// control_request
        /// </remarks>
        private byte _controlRequest;
        
        /// <summary>
        /// 0: key as plaintext, 1-255: future, different hashing/encryption variants. The GCS should in general use the safest mode possible initially and then gradually move down the encryption level if it gets a NACK message indicating an encryption mismatch.
        /// </summary>
        /// <remarks>
        /// version
        /// </remarks>
        private byte _version;
        
        /// <summary>
        /// Password / Key, depending on version plaintext or encrypted. 25 or less characters, NULL terminated. The characters may involve A-Z, a-z, 0-9, and "!?,.-"
        /// </summary>
        /// <remarks>
        /// passkey
        /// </remarks>
        private char[] _passkey = new char[25];
        
        public ChangeOperatorControlMessage() : 
                base(MavLink4Net.Messages.MavMessageType.ChangeOperatorControl, 217)
        {
        }
        
        /// <summary>
        /// System the GCS requests control for
        /// </summary>
        public byte TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                this._targetSystem = value;
            }
        }
        
        /// <summary>
        /// 0: request control of this MAV, 1: Release control of this MAV
        /// </summary>
        public byte ControlRequest
        {
            get
            {
                return this._controlRequest;
            }
            set
            {
                this._controlRequest = value;
            }
        }
        
        /// <summary>
        /// 0: key as plaintext, 1-255: future, different hashing/encryption variants. The GCS should in general use the safest mode possible initially and then gradually move down the encryption level if it gets a NACK message indicating an encryption mismatch.
        /// </summary>
        public byte Version
        {
            get
            {
                return this._version;
            }
            set
            {
                this._version = value;
            }
        }
        
        /// <summary>
        /// Password / Key, depending on version plaintext or encrypted. 25 or less characters, NULL terminated. The characters may involve A-Z, a-z, 0-9, and "!?,.-"
        /// </summary>
        public char[] Passkey
        {
            get
            {
                return this._passkey;
            }
            set
            {
                this._passkey = value;
            }
        }
    }
}
