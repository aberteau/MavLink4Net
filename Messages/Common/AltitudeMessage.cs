//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using MavLink4Net.Messages.Metadata;
using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// The current system altitude.
    /// </summary>
    /// <remarks>
    /// ALTITUDE
    /// </remarks>
    [MessageMetadata(Type=MavLink4Net.Messages.MavMessageType.Altitude, Name="ALTITUDE", Description="The current system altitude.")]
    public class AltitudeMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// Timestamp (micros since boot or Unix epoch)
        /// </summary>
        /// <remarks>
        /// time_usec
        /// </remarks>
        private ulong _timeUsec;
        
        /// <summary>
        /// This altitude measure is initialized on system boot and monotonic (it is never reset, but represents the local altitude change). The only guarantee on this field is that it will never be reset and is consistent within a flight. The recommended value for this field is the uncorrected barometric altitude at boot time. This altitude will also drift and vary between flights.
        /// </summary>
        /// <remarks>
        /// altitude_monotonic
        /// </remarks>
        private float _altitudeMonotonic;
        
        /// <summary>
        /// This altitude measure is strictly above mean sea level and might be non-monotonic (it might reset on events like GPS lock or when a new QNH value is set). It should be the altitude to which global altitude waypoints are compared to. Note that it is *not* the GPS altitude, however, most GPS modules already output AMSL by default and not the WGS84 altitude.
        /// </summary>
        /// <remarks>
        /// altitude_amsl
        /// </remarks>
        private float _altitudeAmsl;
        
        /// <summary>
        /// This is the local altitude in the local coordinate frame. It is not the altitude above home, but in reference to the coordinate origin (0, 0, 0). It is up-positive.
        /// </summary>
        /// <remarks>
        /// altitude_local
        /// </remarks>
        private float _altitudeLocal;
        
        /// <summary>
        /// This is the altitude above the home position. It resets on each change of the current home position.
        /// </summary>
        /// <remarks>
        /// altitude_relative
        /// </remarks>
        private float _altitudeRelative;
        
        /// <summary>
        /// This is the altitude above terrain. It might be fed by a terrain database or an altimeter. Values smaller than -1000 should be interpreted as unknown.
        /// </summary>
        /// <remarks>
        /// altitude_terrain
        /// </remarks>
        private float _altitudeTerrain;
        
        /// <summary>
        /// This is not the altitude, but the clear space below the system according to the fused clearance estimate. It generally should max out at the maximum range of e.g. the laser altimeter. It is generally a moving target. A negative value indicates no measurement available.
        /// </summary>
        /// <remarks>
        /// bottom_clearance
        /// </remarks>
        private float _bottomClearance;
        
        public AltitudeMessage() : 
                base(MavLink4Net.Messages.MavMessageType.Altitude)
        {
        }
        
        /// <summary>
        /// Timestamp (micros since boot or Unix epoch)
        /// </summary>
        [MessageFieldMetadata(Name="time_usec", Type="uint64_t", Units="us", Description="Timestamp (micros since boot or Unix epoch)")]
        public ulong TimeUsec
        {
            get
            {
                return this._timeUsec;
            }
            set
            {
                this._timeUsec = value;
            }
        }
        
        /// <summary>
        /// This altitude measure is initialized on system boot and monotonic (it is never reset, but represents the local altitude change). The only guarantee on this field is that it will never be reset and is consistent within a flight. The recommended value for this field is the uncorrected barometric altitude at boot time. This altitude will also drift and vary between flights.
        /// </summary>
        [MessageFieldMetadata(Name="altitude_monotonic", Type="float", Units="m", Description=@"This altitude measure is initialized on system boot and monotonic (it is never reset, but represents the local altitude change). The only guarantee on this field is that it will never be reset and is consistent within a flight. The recommended value for this field is the uncorrected barometric altitude at boot time. This altitude will also drift and vary between flights.")]
        public float AltitudeMonotonic
        {
            get
            {
                return this._altitudeMonotonic;
            }
            set
            {
                this._altitudeMonotonic = value;
            }
        }
        
        /// <summary>
        /// This altitude measure is strictly above mean sea level and might be non-monotonic (it might reset on events like GPS lock or when a new QNH value is set). It should be the altitude to which global altitude waypoints are compared to. Note that it is *not* the GPS altitude, however, most GPS modules already output AMSL by default and not the WGS84 altitude.
        /// </summary>
        [MessageFieldMetadata(Name="altitude_amsl", Type="float", Units="m", Description=@"This altitude measure is strictly above mean sea level and might be non-monotonic (it might reset on events like GPS lock or when a new QNH value is set). It should be the altitude to which global altitude waypoints are compared to. Note that it is *not* the GPS altitude, however, most GPS modules already output AMSL by default and not the WGS84 altitude.")]
        public float AltitudeAmsl
        {
            get
            {
                return this._altitudeAmsl;
            }
            set
            {
                this._altitudeAmsl = value;
            }
        }
        
        /// <summary>
        /// This is the local altitude in the local coordinate frame. It is not the altitude above home, but in reference to the coordinate origin (0, 0, 0). It is up-positive.
        /// </summary>
        [MessageFieldMetadata(Name="altitude_local", Type="float", Units="m", Description="This is the local altitude in the local coordinate frame. It is not the altitude " +
            "above home, but in reference to the coordinate origin (0, 0, 0). It is up-positi" +
            "ve.")]
        public float AltitudeLocal
        {
            get
            {
                return this._altitudeLocal;
            }
            set
            {
                this._altitudeLocal = value;
            }
        }
        
        /// <summary>
        /// This is the altitude above the home position. It resets on each change of the current home position.
        /// </summary>
        [MessageFieldMetadata(Name="altitude_relative", Type="float", Units="m", Description="This is the altitude above the home position. It resets on each change of the cur" +
            "rent home position.")]
        public float AltitudeRelative
        {
            get
            {
                return this._altitudeRelative;
            }
            set
            {
                this._altitudeRelative = value;
            }
        }
        
        /// <summary>
        /// This is the altitude above terrain. It might be fed by a terrain database or an altimeter. Values smaller than -1000 should be interpreted as unknown.
        /// </summary>
        [MessageFieldMetadata(Name="altitude_terrain", Type="float", Units="m", Description="This is the altitude above terrain. It might be fed by a terrain database or an a" +
            "ltimeter. Values smaller than -1000 should be interpreted as unknown.")]
        public float AltitudeTerrain
        {
            get
            {
                return this._altitudeTerrain;
            }
            set
            {
                this._altitudeTerrain = value;
            }
        }
        
        /// <summary>
        /// This is not the altitude, but the clear space below the system according to the fused clearance estimate. It generally should max out at the maximum range of e.g. the laser altimeter. It is generally a moving target. A negative value indicates no measurement available.
        /// </summary>
        [MessageFieldMetadata(Name="bottom_clearance", Type="float", Units="m", Description=@"This is not the altitude, but the clear space below the system according to the fused clearance estimate. It generally should max out at the maximum range of e.g. the laser altimeter. It is generally a moving target. A negative value indicates no measurement available.")]
        public float BottomClearance
        {
            get
            {
                return this._bottomClearance;
            }
            set
            {
                this._bottomClearance = value;
            }
        }
    }
}
