//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using MavLink4Net.Messages.Metadata;
using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// The global position, as returned by the Global Positioning System (GPS). This is
    ///                NOT the global position estimate of the system, but rather a RAW sensor value. See message GLOBAL_POSITION for the global position estimate. Coordinate frame is right-handed, Z-axis up (GPS frame).
    /// </summary>
    /// <remarks>
    /// GPS_RAW_INT
    /// </remarks>
    [MessageMetadata(Type=MavLink4Net.Messages.MavMessageType.GpsRawInt, Name="GPS_RAW_INT", Description=@"The global position, as returned by the Global Positioning System (GPS). This is
                NOT the global position estimate of the system, but rather a RAW sensor value. See message GLOBAL_POSITION for the global position estimate. Coordinate frame is right-handed, Z-axis up (GPS frame).")]
    public class GpsRawIntMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// Timestamp (microseconds since UNIX epoch or microseconds since system boot)
        /// </summary>
        /// <remarks>
        /// time_usec
        /// </remarks>
        private ulong _timeUsec;
        
        /// <summary>
        /// See the GPS_FIX_TYPE enum.
        /// </summary>
        /// <remarks>
        /// fix_type
        /// </remarks>
        private GpsFixType _fixType;
        
        /// <summary>
        /// Latitude (WGS84, EGM96 ellipsoid), in degrees * 1E7
        /// </summary>
        /// <remarks>
        /// lat
        /// </remarks>
        private int _lat;
        
        /// <summary>
        /// Longitude (WGS84, EGM96 ellipsoid), in degrees * 1E7
        /// </summary>
        /// <remarks>
        /// lon
        /// </remarks>
        private int _lon;
        
        /// <summary>
        /// Altitude (AMSL, NOT WGS84), in meters * 1000 (positive for up). Note that virtually all GPS modules provide the AMSL altitude in addition to the WGS84 altitude.
        /// </summary>
        /// <remarks>
        /// alt
        /// </remarks>
        private int _alt;
        
        /// <summary>
        /// GPS HDOP horizontal dilution of position (unitless). If unknown, set to: UINT16_MAX
        /// </summary>
        /// <remarks>
        /// eph
        /// </remarks>
        private ushort _eph;
        
        /// <summary>
        /// GPS VDOP vertical dilution of position (unitless). If unknown, set to: UINT16_MAX
        /// </summary>
        /// <remarks>
        /// epv
        /// </remarks>
        private ushort _epv;
        
        /// <summary>
        /// GPS ground speed (m/s * 100). If unknown, set to: UINT16_MAX
        /// </summary>
        /// <remarks>
        /// vel
        /// </remarks>
        private ushort _vel;
        
        /// <summary>
        /// Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX
        /// </summary>
        /// <remarks>
        /// cog
        /// </remarks>
        private ushort _cog;
        
        /// <summary>
        /// Number of satellites visible. If unknown, set to 255
        /// </summary>
        /// <remarks>
        /// satellites_visible
        /// </remarks>
        private byte _satellitesVisible;
        
        /// <summary>
        /// Altitude (above WGS84, EGM96 ellipsoid), in meters * 1000 (positive for up).
        /// </summary>
        /// <remarks>
        /// alt_ellipsoid
        /// </remarks>
        private int _altEllipsoid;
        
        /// <summary>
        /// Position uncertainty in meters * 1000 (positive for up).
        /// </summary>
        /// <remarks>
        /// h_acc
        /// </remarks>
        private uint _hAcc;
        
        /// <summary>
        /// Altitude uncertainty in meters * 1000 (positive for up).
        /// </summary>
        /// <remarks>
        /// v_acc
        /// </remarks>
        private uint _vAcc;
        
        /// <summary>
        /// Speed uncertainty in meters * 1000 (positive for up).
        /// </summary>
        /// <remarks>
        /// vel_acc
        /// </remarks>
        private uint _velAcc;
        
        /// <summary>
        /// Heading / track uncertainty in degrees * 1e5.
        /// </summary>
        /// <remarks>
        /// hdg_acc
        /// </remarks>
        private uint _hdgAcc;
        
        public GpsRawIntMessage() : 
                base(MavLink4Net.Messages.MavMessageType.GpsRawInt, 111)
        {
        }
        
        /// <summary>
        /// Timestamp (microseconds since UNIX epoch or microseconds since system boot)
        /// </summary>
        [MessageFieldMetadata(Name="time_usec", Type="uint64_t", Units="us", Description="Timestamp (microseconds since UNIX epoch or microseconds since system boot)")]
        public ulong TimeUsec
        {
            get
            {
                return this._timeUsec;
            }
            set
            {
                this._timeUsec = value;
            }
        }
        
        /// <summary>
        /// See the GPS_FIX_TYPE enum.
        /// </summary>
        [MessageFieldMetadata(Name="fix_type", Type="GPS_FIX_TYPE enum", Description="See the GPS_FIX_TYPE enum.")]
        public GpsFixType FixType
        {
            get
            {
                return this._fixType;
            }
            set
            {
                this._fixType = value;
            }
        }
        
        /// <summary>
        /// Latitude (WGS84, EGM96 ellipsoid), in degrees * 1E7
        /// </summary>
        [MessageFieldMetadata(Name="lat", Type="int32_t", Units="degE7", Description="Latitude (WGS84, EGM96 ellipsoid), in degrees * 1E7")]
        public int Lat
        {
            get
            {
                return this._lat;
            }
            set
            {
                this._lat = value;
            }
        }
        
        /// <summary>
        /// Longitude (WGS84, EGM96 ellipsoid), in degrees * 1E7
        /// </summary>
        [MessageFieldMetadata(Name="lon", Type="int32_t", Units="degE7", Description="Longitude (WGS84, EGM96 ellipsoid), in degrees * 1E7")]
        public int Lon
        {
            get
            {
                return this._lon;
            }
            set
            {
                this._lon = value;
            }
        }
        
        /// <summary>
        /// Altitude (AMSL, NOT WGS84), in meters * 1000 (positive for up). Note that virtually all GPS modules provide the AMSL altitude in addition to the WGS84 altitude.
        /// </summary>
        [MessageFieldMetadata(Name="alt", Type="int32_t", Units="mm", Description="Altitude (AMSL, NOT WGS84), in meters * 1000 (positive for up). Note that virtual" +
            "ly all GPS modules provide the AMSL altitude in addition to the WGS84 altitude.")]
        public int Alt
        {
            get
            {
                return this._alt;
            }
            set
            {
                this._alt = value;
            }
        }
        
        /// <summary>
        /// GPS HDOP horizontal dilution of position (unitless). If unknown, set to: UINT16_MAX
        /// </summary>
        [MessageFieldMetadata(Name="eph", Type="uint16_t", Description="GPS HDOP horizontal dilution of position (unitless). If unknown, set to: UINT16_M" +
            "AX")]
        public ushort Eph
        {
            get
            {
                return this._eph;
            }
            set
            {
                this._eph = value;
            }
        }
        
        /// <summary>
        /// GPS VDOP vertical dilution of position (unitless). If unknown, set to: UINT16_MAX
        /// </summary>
        [MessageFieldMetadata(Name="epv", Type="uint16_t", Description="GPS VDOP vertical dilution of position (unitless). If unknown, set to: UINT16_MAX" +
            "")]
        public ushort Epv
        {
            get
            {
                return this._epv;
            }
            set
            {
                this._epv = value;
            }
        }
        
        /// <summary>
        /// GPS ground speed (m/s * 100). If unknown, set to: UINT16_MAX
        /// </summary>
        [MessageFieldMetadata(Name="vel", Type="uint16_t", Units="cm/s", Description="GPS ground speed (m/s * 100). If unknown, set to: UINT16_MAX")]
        public ushort Vel
        {
            get
            {
                return this._vel;
            }
            set
            {
                this._vel = value;
            }
        }
        
        /// <summary>
        /// Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX
        /// </summary>
        [MessageFieldMetadata(Name="cog", Type="uint16_t", Units="cdeg", Description="Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0" +
            "..359.99 degrees. If unknown, set to: UINT16_MAX")]
        public ushort Cog
        {
            get
            {
                return this._cog;
            }
            set
            {
                this._cog = value;
            }
        }
        
        /// <summary>
        /// Number of satellites visible. If unknown, set to 255
        /// </summary>
        [MessageFieldMetadata(Name="satellites_visible", Type="uint8_t", Description="Number of satellites visible. If unknown, set to 255")]
        public byte SatellitesVisible
        {
            get
            {
                return this._satellitesVisible;
            }
            set
            {
                this._satellitesVisible = value;
            }
        }
        
        /// <summary>
        /// Altitude (above WGS84, EGM96 ellipsoid), in meters * 1000 (positive for up).
        /// </summary>
        [MessageFieldMetadata(Name="alt_ellipsoid", Type="int32_t", Units="mm", Description="Altitude (above WGS84, EGM96 ellipsoid), in meters * 1000 (positive for up).")]
        public int AltEllipsoid
        {
            get
            {
                return this._altEllipsoid;
            }
            set
            {
                this._altEllipsoid = value;
            }
        }
        
        /// <summary>
        /// Position uncertainty in meters * 1000 (positive for up).
        /// </summary>
        [MessageFieldMetadata(Name="h_acc", Type="uint32_t", Units="mm", Description="Position uncertainty in meters * 1000 (positive for up).")]
        public uint HAcc
        {
            get
            {
                return this._hAcc;
            }
            set
            {
                this._hAcc = value;
            }
        }
        
        /// <summary>
        /// Altitude uncertainty in meters * 1000 (positive for up).
        /// </summary>
        [MessageFieldMetadata(Name="v_acc", Type="uint32_t", Units="mm", Description="Altitude uncertainty in meters * 1000 (positive for up).")]
        public uint VAcc
        {
            get
            {
                return this._vAcc;
            }
            set
            {
                this._vAcc = value;
            }
        }
        
        /// <summary>
        /// Speed uncertainty in meters * 1000 (positive for up).
        /// </summary>
        [MessageFieldMetadata(Name="vel_acc", Type="uint32_t", Units="mm", Description="Speed uncertainty in meters * 1000 (positive for up).")]
        public uint VelAcc
        {
            get
            {
                return this._velAcc;
            }
            set
            {
                this._velAcc = value;
            }
        }
        
        /// <summary>
        /// Heading / track uncertainty in degrees * 1e5.
        /// </summary>
        [MessageFieldMetadata(Name="hdg_acc", Type="uint32_t", Units="degE5", Description="Heading / track uncertainty in degrees * 1e5.")]
        public uint HdgAcc
        {
            get
            {
                return this._hdgAcc;
            }
            set
            {
                this._hdgAcc = value;
            }
        }
    }
}
