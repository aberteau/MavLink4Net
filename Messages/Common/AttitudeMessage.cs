//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right).
    /// </summary>
    /// <remarks>
    /// ATTITUDE
    /// </remarks>
    public class AttitudeMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// Timestamp (milliseconds since system boot)
        /// </summary>
        /// <remarks>
        /// time_boot_ms
        /// </remarks>
        private uint _timeBootMs;
        
        /// <summary>
        /// Roll angle (rad, -pi..+pi)
        /// </summary>
        /// <remarks>
        /// roll
        /// </remarks>
        private float _roll;
        
        /// <summary>
        /// Pitch angle (rad, -pi..+pi)
        /// </summary>
        /// <remarks>
        /// pitch
        /// </remarks>
        private float _pitch;
        
        /// <summary>
        /// Yaw angle (rad, -pi..+pi)
        /// </summary>
        /// <remarks>
        /// yaw
        /// </remarks>
        private float _yaw;
        
        /// <summary>
        /// Roll angular speed (rad/s)
        /// </summary>
        /// <remarks>
        /// rollspeed
        /// </remarks>
        private float _rollspeed;
        
        /// <summary>
        /// Pitch angular speed (rad/s)
        /// </summary>
        /// <remarks>
        /// pitchspeed
        /// </remarks>
        private float _pitchspeed;
        
        /// <summary>
        /// Yaw angular speed (rad/s)
        /// </summary>
        /// <remarks>
        /// yawspeed
        /// </remarks>
        private float _yawspeed;
        
        public AttitudeMessage() : 
                base(MavLink4Net.Messages.MavMessageType.Attitude, 39)
        {
        }
        
        /// <summary>
        /// Timestamp (milliseconds since system boot)
        /// </summary>
        public uint TimeBootMs
        {
            get
            {
                return this._timeBootMs;
            }
            set
            {
                this._timeBootMs = value;
            }
        }
        
        /// <summary>
        /// Roll angle (rad, -pi..+pi)
        /// </summary>
        public float Roll
        {
            get
            {
                return this._roll;
            }
            set
            {
                this._roll = value;
            }
        }
        
        /// <summary>
        /// Pitch angle (rad, -pi..+pi)
        /// </summary>
        public float Pitch
        {
            get
            {
                return this._pitch;
            }
            set
            {
                this._pitch = value;
            }
        }
        
        /// <summary>
        /// Yaw angle (rad, -pi..+pi)
        /// </summary>
        public float Yaw
        {
            get
            {
                return this._yaw;
            }
            set
            {
                this._yaw = value;
            }
        }
        
        /// <summary>
        /// Roll angular speed (rad/s)
        /// </summary>
        public float Rollspeed
        {
            get
            {
                return this._rollspeed;
            }
            set
            {
                this._rollspeed = value;
            }
        }
        
        /// <summary>
        /// Pitch angular speed (rad/s)
        /// </summary>
        public float Pitchspeed
        {
            get
            {
                return this._pitchspeed;
            }
            set
            {
                this._pitchspeed = value;
            }
        }
        
        /// <summary>
        /// Yaw angular speed (rad/s)
        /// </summary>
        public float Yawspeed
        {
            get
            {
                return this._yawspeed;
            }
            set
            {
                this._yawspeed = value;
            }
        }
    }
}
