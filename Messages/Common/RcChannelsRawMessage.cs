//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using MavLink4Net.Messages.Metadata;
using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// The RAW values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.
    /// </summary>
    /// <remarks>
    /// RC_CHANNELS_RAW
    /// </remarks>
    [MessageMetadata(Type=MavLink4Net.Messages.MavMessageType.RcChannelsRaw, Name="RC_CHANNELS_RAW", Description="The RAW values of the RC channels received. The standard PPM modulation is as fol" +
        "lows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/trans" +
        "mitters might violate this specification.")]
    public class RcChannelsRawMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// Timestamp (milliseconds since system boot)
        /// </summary>
        /// <remarks>
        /// time_boot_ms
        /// </remarks>
        private uint _timeBootMs;
        
        /// <summary>
        /// Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.
        /// </summary>
        /// <remarks>
        /// port
        /// </remarks>
        private byte _port;
        
        /// <summary>
        /// RC channel 1 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        /// <remarks>
        /// chan1_raw
        /// </remarks>
        private ushort _chan1Raw;
        
        /// <summary>
        /// RC channel 2 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        /// <remarks>
        /// chan2_raw
        /// </remarks>
        private ushort _chan2Raw;
        
        /// <summary>
        /// RC channel 3 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        /// <remarks>
        /// chan3_raw
        /// </remarks>
        private ushort _chan3Raw;
        
        /// <summary>
        /// RC channel 4 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        /// <remarks>
        /// chan4_raw
        /// </remarks>
        private ushort _chan4Raw;
        
        /// <summary>
        /// RC channel 5 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        /// <remarks>
        /// chan5_raw
        /// </remarks>
        private ushort _chan5Raw;
        
        /// <summary>
        /// RC channel 6 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        /// <remarks>
        /// chan6_raw
        /// </remarks>
        private ushort _chan6Raw;
        
        /// <summary>
        /// RC channel 7 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        /// <remarks>
        /// chan7_raw
        /// </remarks>
        private ushort _chan7Raw;
        
        /// <summary>
        /// RC channel 8 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        /// <remarks>
        /// chan8_raw
        /// </remarks>
        private ushort _chan8Raw;
        
        /// <summary>
        /// Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.
        /// </summary>
        /// <remarks>
        /// rssi
        /// </remarks>
        private byte _rssi;
        
        public RcChannelsRawMessage() : 
                base(MavLink4Net.Messages.MavMessageType.RcChannelsRaw, 244)
        {
        }
        
        /// <summary>
        /// Timestamp (milliseconds since system boot)
        /// </summary>
        [MessageFieldMetadata(Name="time_boot_ms", Type="uint32_t", Units="ms", Description="Timestamp (milliseconds since system boot)")]
        public uint TimeBootMs
        {
            get
            {
                return this._timeBootMs;
            }
            set
            {
                this._timeBootMs = value;
            }
        }
        
        /// <summary>
        /// Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.
        /// </summary>
        [MessageFieldMetadata(Name="port", Type="uint8_t", Description="Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but t" +
            "his allows for more than 8 servos.")]
        public byte Port
        {
            get
            {
                return this._port;
            }
            set
            {
                this._port = value;
            }
        }
        
        /// <summary>
        /// RC channel 1 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        [MessageFieldMetadata(Name="chan1_raw", Type="uint16_t", Units="us", Description="RC channel 1 value, in microseconds. A value of UINT16_MAX implies the channel is" +
            " unused.")]
        public ushort Chan1Raw
        {
            get
            {
                return this._chan1Raw;
            }
            set
            {
                this._chan1Raw = value;
            }
        }
        
        /// <summary>
        /// RC channel 2 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        [MessageFieldMetadata(Name="chan2_raw", Type="uint16_t", Units="us", Description="RC channel 2 value, in microseconds. A value of UINT16_MAX implies the channel is" +
            " unused.")]
        public ushort Chan2Raw
        {
            get
            {
                return this._chan2Raw;
            }
            set
            {
                this._chan2Raw = value;
            }
        }
        
        /// <summary>
        /// RC channel 3 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        [MessageFieldMetadata(Name="chan3_raw", Type="uint16_t", Units="us", Description="RC channel 3 value, in microseconds. A value of UINT16_MAX implies the channel is" +
            " unused.")]
        public ushort Chan3Raw
        {
            get
            {
                return this._chan3Raw;
            }
            set
            {
                this._chan3Raw = value;
            }
        }
        
        /// <summary>
        /// RC channel 4 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        [MessageFieldMetadata(Name="chan4_raw", Type="uint16_t", Units="us", Description="RC channel 4 value, in microseconds. A value of UINT16_MAX implies the channel is" +
            " unused.")]
        public ushort Chan4Raw
        {
            get
            {
                return this._chan4Raw;
            }
            set
            {
                this._chan4Raw = value;
            }
        }
        
        /// <summary>
        /// RC channel 5 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        [MessageFieldMetadata(Name="chan5_raw", Type="uint16_t", Units="us", Description="RC channel 5 value, in microseconds. A value of UINT16_MAX implies the channel is" +
            " unused.")]
        public ushort Chan5Raw
        {
            get
            {
                return this._chan5Raw;
            }
            set
            {
                this._chan5Raw = value;
            }
        }
        
        /// <summary>
        /// RC channel 6 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        [MessageFieldMetadata(Name="chan6_raw", Type="uint16_t", Units="us", Description="RC channel 6 value, in microseconds. A value of UINT16_MAX implies the channel is" +
            " unused.")]
        public ushort Chan6Raw
        {
            get
            {
                return this._chan6Raw;
            }
            set
            {
                this._chan6Raw = value;
            }
        }
        
        /// <summary>
        /// RC channel 7 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        [MessageFieldMetadata(Name="chan7_raw", Type="uint16_t", Units="us", Description="RC channel 7 value, in microseconds. A value of UINT16_MAX implies the channel is" +
            " unused.")]
        public ushort Chan7Raw
        {
            get
            {
                return this._chan7Raw;
            }
            set
            {
                this._chan7Raw = value;
            }
        }
        
        /// <summary>
        /// RC channel 8 value, in microseconds. A value of UINT16_MAX implies the channel is unused.
        /// </summary>
        [MessageFieldMetadata(Name="chan8_raw", Type="uint16_t", Units="us", Description="RC channel 8 value, in microseconds. A value of UINT16_MAX implies the channel is" +
            " unused.")]
        public ushort Chan8Raw
        {
            get
            {
                return this._chan8Raw;
            }
            set
            {
                this._chan8Raw = value;
            }
        }
        
        /// <summary>
        /// Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.
        /// </summary>
        [MessageFieldMetadata(Name="rssi", Type="uint8_t", Units="%", Description="Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.")]
        public byte Rssi
        {
            get
            {
                return this._rssi;
            }
            set
            {
                this._rssi = value;
            }
        }
    }
}
