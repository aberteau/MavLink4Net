//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// Request for terrain data and terrain status
    /// </summary>
    /// <remarks>
    /// TERRAIN_REQUEST
    /// </remarks>
    public class TerrainRequestMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// Latitude of SW corner of first grid (degrees *10^7)
        /// </summary>
        /// <remarks>
        /// lat
        /// </remarks>
        private int _lat;
        
        /// <summary>
        /// Longitude of SW corner of first grid (in degrees *10^7)
        /// </summary>
        /// <remarks>
        /// lon
        /// </remarks>
        private int _lon;
        
        /// <summary>
        /// Grid spacing in meters
        /// </summary>
        /// <remarks>
        /// grid_spacing
        /// </remarks>
        private ushort _gridSpacing;
        
        /// <summary>
        /// Bitmask of requested 4x4 grids (row major 8x7 array of grids, 56 bits)
        /// </summary>
        /// <remarks>
        /// mask
        /// </remarks>
        private ulong _mask;
        
        public TerrainRequestMessage() : 
                base(MavLink4Net.Messages.MavMessageType.TerrainRequest, 6)
        {
        }
        
        /// <summary>
        /// Latitude of SW corner of first grid (degrees *10^7)
        /// </summary>
        public int Lat
        {
            get
            {
                return this._lat;
            }
            set
            {
                this._lat = value;
            }
        }
        
        /// <summary>
        /// Longitude of SW corner of first grid (in degrees *10^7)
        /// </summary>
        public int Lon
        {
            get
            {
                return this._lon;
            }
            set
            {
                this._lon = value;
            }
        }
        
        /// <summary>
        /// Grid spacing in meters
        /// </summary>
        public ushort GridSpacing
        {
            get
            {
                return this._gridSpacing;
            }
            set
            {
                this._gridSpacing = value;
            }
        }
        
        /// <summary>
        /// Bitmask of requested 4x4 grids (row major 8x7 array of grids, 56 bits)
        /// </summary>
        public ulong Mask
        {
            get
            {
                return this._mask;
            }
            set
            {
                this._mask = value;
            }
        }
    }
}
