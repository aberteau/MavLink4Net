//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// Commands to be executed by the MAV. They can be executed on user request, or as part of a mission script. If the action is used in a mission, the parameter mapping to the waypoint/mission message is as follows: Param 1, Param 2, Param 3, Param 4, X: Param 5, Y:Param 6, Z:Param 7. This command list is similar what ARINC 424 is for commercial aircraft: A data format how to interpret waypoint/mission data.
    /// </summary>
    /// <remarks>
    /// MAV_CMD
    /// </remarks>
    public enum Cmd
    {
        
        /// <summary>
        /// Navigate to waypoint.
        /// Mission Param #1 : Hold time in decimal seconds. (ignored by fixed wing, time to stay at waypoint for rotary wing)
        /// Mission Param #2 : Acceptance radius in meters (if the sphere with this radius is hit, the waypoint counts as reached)
        /// Mission Param #3 : 0 to pass through the WP, if > 0 radius in meters to pass by WP. Positive value for clockwise orbit, negative value for counter-clockwise orbit. Allows trajectory control.
        /// Mission Param #4 : Desired yaw angle at waypoint (rotary wing). NaN for unchanged.
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_WAYPOINT
        /// </remarks>
        [Description("Navigate to waypoint.")]
        NavWaypoint = 16,
        
        /// <summary>
        /// Loiter around this waypoint an unlimited amount of time
        /// Mission Param #1 : Empty
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Radius around waypoint, in meters. If positive loiter clockwise, else counter-clockwise
        /// Mission Param #4 : Desired yaw angle.
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_LOITER_UNLIM
        /// </remarks>
        [Description("Loiter around this waypoint an unlimited amount of time")]
        NavLoiterUnlim = 17,
        
        /// <summary>
        /// Loiter around this waypoint for X turns
        /// Mission Param #1 : Turns
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Radius around waypoint, in meters. If positive loiter clockwise, else counter-clockwise
        /// Mission Param #4 : Forward moving aircraft this sets exit xtrack location: 0 for center of loiter wp, 1 for exit location. Else, this is desired yaw angle
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_LOITER_TURNS
        /// </remarks>
        [Description("Loiter around this waypoint for X turns")]
        NavLoiterTurns = 18,
        
        /// <summary>
        /// Loiter around this waypoint for X seconds
        /// Mission Param #1 : Seconds (decimal)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Radius around waypoint, in meters. If positive loiter clockwise, else counter-clockwise
        /// Mission Param #4 : Forward moving aircraft this sets exit xtrack location: 0 for center of loiter wp, 1 for exit location. Else, this is desired yaw angle
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_LOITER_TIME
        /// </remarks>
        [Description("Loiter around this waypoint for X seconds")]
        NavLoiterTime = 19,
        
        /// <summary>
        /// Return to launch location
        /// Mission Param #1 : Empty
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_RETURN_TO_LAUNCH
        /// </remarks>
        [Description("Return to launch location")]
        NavReturnToLaunch = 20,
        
        /// <summary>
        /// Land at location
        /// Mission Param #1 : Abort Alt
        /// Mission Param #2 : Precision land mode. (0 = normal landing, 1 = opportunistic precision landing, 2 = required precsion landing)
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Desired yaw angle. NaN for unchanged.
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude (ground level)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_LAND
        /// </remarks>
        [Description("Land at location")]
        NavLand = 21,
        
        /// <summary>
        /// Takeoff from ground / hand
        /// Mission Param #1 : Minimum pitch (if airspeed sensor present), desired pitch without sensor
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Yaw angle (if magnetometer present), ignored without magnetometer. NaN for unchanged.
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_TAKEOFF
        /// </remarks>
        [Description("Takeoff from ground / hand")]
        NavTakeoff = 22,
        
        /// <summary>
        /// Land at local position (local frame only)
        /// Mission Param #1 : Landing target number (if available)
        /// Mission Param #2 : Maximum accepted offset from desired landing position [m] - computed magnitude from spherical coordinates: d = sqrt(x^2 + y^2 + z^2), which gives the maximum accepted distance between the desired landing position and the position where the vehicle is about to land
        /// Mission Param #3 : Landing descend rate [ms^-1]
        /// Mission Param #4 : Desired yaw angle [rad]
        /// Mission Param #5 : Y-axis position [m]
        /// Mission Param #6 : X-axis position [m]
        /// Mission Param #7 : Z-axis / ground level position [m]
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_LAND_LOCAL
        /// </remarks>
        [Description("Land at local position (local frame only)")]
        NavLandLocal = 23,
        
        /// <summary>
        /// Takeoff from local position (local frame only)
        /// Mission Param #1 : Minimum pitch (if airspeed sensor present), desired pitch without sensor [rad]
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Takeoff ascend rate [ms^-1]
        /// Mission Param #4 : Yaw angle [rad] (if magnetometer or another yaw estimation source present), ignored without one of these
        /// Mission Param #5 : Y-axis position [m]
        /// Mission Param #6 : X-axis position [m]
        /// Mission Param #7 : Z-axis position [m]
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_TAKEOFF_LOCAL
        /// </remarks>
        [Description("Takeoff from local position (local frame only)")]
        NavTakeoffLocal = 24,
        
        /// <summary>
        /// Vehicle following, i.e. this waypoint represents the position of a moving vehicle
        /// Mission Param #1 : Following logic to use (e.g. loitering or sinusoidal following) - depends on specific autopilot implementation
        /// Mission Param #2 : Ground speed of vehicle to be followed
        /// Mission Param #3 : Radius around waypoint, in meters. If positive loiter clockwise, else counter-clockwise
        /// Mission Param #4 : Desired yaw angle.
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_FOLLOW
        /// </remarks>
        [Description("Vehicle following, i.e. this waypoint represents the position of a moving vehicle" +
            "")]
        NavFollow = 25,
        
        /// <summary>
        /// Continue on the current course and climb/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached.
        /// Mission Param #1 : Climb or Descend (0 = Neutral, command completes when within 5m of this command's altitude, 1 = Climbing, command completes when at or above this command's altitude, 2 = Descending, command completes when at or below this command's altitude.
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Desired altitude in meters
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT
        /// </remarks>
        [Description("Continue on the current course and climb/descend to specified altitude.  When the" +
            " altitude is reached continue to the next command (i.e., don\'t proceed to the ne" +
            "xt command until the desired altitude is reached.")]
        NavContinueAndChangeAlt = 30,
        
        /// <summary>
        /// Begin loiter at the specified Latitude and Longitude.  If Lat=Lon=0, then loiter at the current position.  Don't consider the navigation command complete (don't leave loiter) until the altitude has been reached.  Additionally, if the Heading Required parameter is non-zero the  aircraft will not leave the loiter until heading toward the next waypoint.
        /// Mission Param #1 : Heading Required (0 = False)
        /// Mission Param #2 : Radius in meters. If positive loiter clockwise, negative counter-clockwise, 0 means no change to standard loiter.
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Forward moving aircraft this sets exit xtrack location: 0 for center of loiter wp, 1 for exit location
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_LOITER_TO_ALT
        /// </remarks>
        [Description(@"Begin loiter at the specified Latitude and Longitude.  If Lat=Lon=0, then loiter at the current position.  Don't consider the navigation command complete (don't leave loiter) until the altitude has been reached.  Additionally, if the Heading Required parameter is non-zero the  aircraft will not leave the loiter until heading toward the next waypoint.")]
        NavLoiterToAlt = 31,
        
        /// <summary>
        /// Being following a target
        /// Mission Param #1 : System ID (the system ID of the FOLLOW_TARGET beacon). Send 0 to disable follow-me and return to the default position hold mode
        /// Mission Param #2 : RESERVED
        /// Mission Param #3 : RESERVED
        /// Mission Param #4 : altitude flag: 0: Keep current altitude, 1: keep altitude difference to target, 2: go to a fixed altitude above home
        /// Mission Param #5 : altitude
        /// Mission Param #6 : RESERVED
        /// Mission Param #7 : TTL in seconds in which the MAV should go to the default position hold mode after a message rx timeout
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_FOLLOW
        /// </remarks>
        [Description("Being following a target")]
        DoFollow = 32,
        
        /// <summary>
        /// Reposition the MAV after a follow target command has been sent
        /// Mission Param #1 : Camera q1 (where 0 is on the ray from the camera to the tracking device)
        /// Mission Param #2 : Camera q2
        /// Mission Param #3 : Camera q3
        /// Mission Param #4 : Camera q4
        /// Mission Param #5 : altitude offset from target (m)
        /// Mission Param #6 : X offset from target (m)
        /// Mission Param #7 : Y offset from target (m)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_FOLLOW_REPOSITION
        /// </remarks>
        [Description("Reposition the MAV after a follow target command has been sent")]
        DoFollowReposition = 33,
        
        /// <summary>
        /// THIS INTERFACE IS DEPRECATED AS OF JANUARY 2018. Please use MAV_CMD_DO_SET_ROI_* messages instead. Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras.
        /// Mission Param #1 : Region of intereset mode. (see MAV_ROI enum)
        /// Mission Param #2 : Waypoint index/ target ID. (see MAV_ROI enum)
        /// Mission Param #3 : ROI index (allows a vehicle to manage multiple ROI's)
        /// Mission Param #4 : Empty
        /// Mission Param #5 : x the location of the fixed ROI (see MAV_FRAME)
        /// Mission Param #6 : y
        /// Mission Param #7 : z
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_ROI
        /// </remarks>
        [Description(@"THIS INTERFACE IS DEPRECATED AS OF JANUARY 2018. Please use MAV_CMD_DO_SET_ROI_* messages instead. Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras.")]
        NavRoi = 80,
        
        /// <summary>
        /// Control autonomous path planning on the MAV.
        /// Mission Param #1 : 0: Disable local obstacle avoidance / local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning
        /// Mission Param #2 : 0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map/occupancy grid, 3: Enable and reset planned route, but not occupancy grid
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Yaw angle at goal, in compass degrees, [0..360]
        /// Mission Param #5 : Latitude/X of goal
        /// Mission Param #6 : Longitude/Y of goal
        /// Mission Param #7 : Altitude/Z of goal
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_PATHPLANNING
        /// </remarks>
        [Description("Control autonomous path planning on the MAV.")]
        NavPathplanning = 81,
        
        /// <summary>
        /// Navigate to waypoint using a spline path.
        /// Mission Param #1 : Hold time in decimal seconds. (ignored by fixed wing, time to stay at waypoint for rotary wing)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Latitude/X of goal
        /// Mission Param #6 : Longitude/Y of goal
        /// Mission Param #7 : Altitude/Z of goal
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_SPLINE_WAYPOINT
        /// </remarks>
        [Description("Navigate to waypoint using a spline path.")]
        NavSplineWaypoint = 82,
        
        /// <summary>
        /// Takeoff from ground using VTOL mode
        /// Mission Param #1 : Empty
        /// Mission Param #2 : Front transition heading, see VTOL_TRANSITION_HEADING enum.
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Yaw angle in degrees. NaN for unchanged.
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_VTOL_TAKEOFF
        /// </remarks>
        [Description("Takeoff from ground using VTOL mode")]
        NavVtolTakeoff = 84,
        
        /// <summary>
        /// Land using VTOL mode
        /// Mission Param #1 : Empty
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Approach altitude (with the same reference as the Altitude field). NaN if unspecified.
        /// Mission Param #4 : Yaw angle in degrees. NaN for unchanged.
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude (ground level)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_VTOL_LAND
        /// </remarks>
        [Description("Land using VTOL mode")]
        NavVtolLand = 85,
        
        /// <summary>
        /// hand control over to an external controller
        /// Mission Param #1 : On / Off (> 0.5f on)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_GUIDED_ENABLE
        /// </remarks>
        [Description("hand control over to an external controller")]
        NavGuidedEnable = 92,
        
        /// <summary>
        /// Delay the next navigation command a number of seconds or until a specified time
        /// Mission Param #1 : Delay in seconds (decimal, -1 to enable time-of-day fields)
        /// Mission Param #2 : hour (24h format, UTC, -1 to ignore)
        /// Mission Param #3 : minute (24h format, UTC, -1 to ignore)
        /// Mission Param #4 : second (24h format, UTC)
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_DELAY
        /// </remarks>
        [Description("Delay the next navigation command a number of seconds or until a specified time")]
        NavDelay = 93,
        
        /// <summary>
        /// Descend and place payload.  Vehicle descends until it detects a hanging payload has reached the ground, the gripper is opened to release the payload
        /// Mission Param #1 : Maximum distance to descend (meters)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Latitude (deg * 1E7)
        /// Mission Param #6 : Longitude (deg * 1E7)
        /// Mission Param #7 : Altitude (meters)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_PAYLOAD_PLACE
        /// </remarks>
        [Description("Descend and place payload.  Vehicle descends until it detects a hanging payload h" +
            "as reached the ground, the gripper is opened to release the payload")]
        NavPayloadPlace = 94,
        
        /// <summary>
        /// NOP - This command is only used to mark the upper limit of the NAV/ACTION commands in the enumeration
        /// Mission Param #1 : Empty
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_LAST
        /// </remarks>
        [Description("NOP - This command is only used to mark the upper limit of the NAV/ACTION command" +
            "s in the enumeration")]
        NavLast = 95,
        
        /// <summary>
        /// Delay mission state machine.
        /// Mission Param #1 : Delay in seconds (decimal)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_CONDITION_DELAY
        /// </remarks>
        [Description("Delay mission state machine.")]
        ConditionDelay = 112,
        
        /// <summary>
        /// Ascend/descend at rate.  Delay mission state machine until desired altitude reached.
        /// Mission Param #1 : Descent / Ascend rate (m/s)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Finish Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_CONDITION_CHANGE_ALT
        /// </remarks>
        [Description("Ascend/descend at rate.  Delay mission state machine until desired altitude reach" +
            "ed.")]
        ConditionChangeAlt = 113,
        
        /// <summary>
        /// Delay mission state machine until within desired distance of next NAV point.
        /// Mission Param #1 : Distance (meters)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_CONDITION_DISTANCE
        /// </remarks>
        [Description("Delay mission state machine until within desired distance of next NAV point.")]
        ConditionDistance = 114,
        
        /// <summary>
        /// Reach a certain target angle.
        /// Mission Param #1 : target angle: [0-360], 0 is north
        /// Mission Param #2 : speed during yaw change:[deg per second]
        /// Mission Param #3 : direction: negative: counter clockwise, positive: clockwise [-1,1]
        /// Mission Param #4 : relative offset or absolute angle: [ 1,0]
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_CONDITION_YAW
        /// </remarks>
        [Description("Reach a certain target angle.")]
        ConditionYaw = 115,
        
        /// <summary>
        /// NOP - This command is only used to mark the upper limit of the CONDITION commands in the enumeration
        /// Mission Param #1 : Empty
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_CONDITION_LAST
        /// </remarks>
        [Description("NOP - This command is only used to mark the upper limit of the CONDITION commands" +
            " in the enumeration")]
        ConditionLast = 159,
        
        /// <summary>
        /// Set system mode.
        /// Mission Param #1 : Mode, as defined by ENUM MAV_MODE
        /// Mission Param #2 : Custom mode - this is system specific, please refer to the individual autopilot specifications for details.
        /// Mission Param #3 : Custom sub mode - this is system specific, please refer to the individual autopilot specifications for details.
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_MODE
        /// </remarks>
        [Description("Set system mode.")]
        DoSetMode = 176,
        
        /// <summary>
        /// Jump to the desired command in the mission list.  Repeat this action only the specified number of times
        /// Mission Param #1 : Sequence number
        /// Mission Param #2 : Repeat count
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_JUMP
        /// </remarks>
        [Description("Jump to the desired command in the mission list.  Repeat this action only the spe" +
            "cified number of times")]
        DoJump = 177,
        
        /// <summary>
        /// Change speed and/or throttle set points.
        /// Mission Param #1 : Speed type (0=Airspeed, 1=Ground Speed)
        /// Mission Param #2 : Speed  (m/s, -1 indicates no change)
        /// Mission Param #3 : Throttle  ( Percent, -1 indicates no change)
        /// Mission Param #4 : absolute or relative [0,1]
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_CHANGE_SPEED
        /// </remarks>
        [Description("Change speed and/or throttle set points.")]
        DoChangeSpeed = 178,
        
        /// <summary>
        /// Changes the home location either to the current location or a specified location.
        /// Mission Param #1 : Use current (1=use current location, 0=use specified location)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_HOME
        /// </remarks>
        [Description("Changes the home location either to the current location or a specified location." +
            "")]
        DoSetHome = 179,
        
        /// <summary>
        /// Set a system parameter.  Caution!  Use of this command requires knowledge of the numeric enumeration value of the parameter.
        /// Mission Param #1 : Parameter number
        /// Mission Param #2 : Parameter value
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_PARAMETER
        /// </remarks>
        [Description("Set a system parameter.  Caution!  Use of this command requires knowledge of the " +
            "numeric enumeration value of the parameter.")]
        DoSetParameter = 180,
        
        /// <summary>
        /// Set a relay to a condition.
        /// Mission Param #1 : Relay number
        /// Mission Param #2 : Setting (1=on, 0=off, others possible depending on system hardware)
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_RELAY
        /// </remarks>
        [Description("Set a relay to a condition.")]
        DoSetRelay = 181,
        
        /// <summary>
        /// Cycle a relay on and off for a desired number of cyles with a desired period.
        /// Mission Param #1 : Relay number
        /// Mission Param #2 : Cycle count
        /// Mission Param #3 : Cycle time (seconds, decimal)
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_REPEAT_RELAY
        /// </remarks>
        [Description("Cycle a relay on and off for a desired number of cyles with a desired period.")]
        DoRepeatRelay = 182,
        
        /// <summary>
        /// Set a servo to a desired PWM value.
        /// Mission Param #1 : Servo number
        /// Mission Param #2 : PWM (microseconds, 1000 to 2000 typical)
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_SERVO
        /// </remarks>
        [Description("Set a servo to a desired PWM value.")]
        DoSetServo = 183,
        
        /// <summary>
        /// Cycle a between its nominal setting and a desired PWM for a desired number of cycles with a desired period.
        /// Mission Param #1 : Servo number
        /// Mission Param #2 : PWM (microseconds, 1000 to 2000 typical)
        /// Mission Param #3 : Cycle count
        /// Mission Param #4 : Cycle time (seconds)
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_REPEAT_SERVO
        /// </remarks>
        [Description("Cycle a between its nominal setting and a desired PWM for a desired number of cyc" +
            "les with a desired period.")]
        DoRepeatServo = 184,
        
        /// <summary>
        /// Terminate flight immediately
        /// Mission Param #1 : Flight termination activated if > 0.5
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_FLIGHTTERMINATION
        /// </remarks>
        [Description("Terminate flight immediately")]
        DoFlighttermination = 185,
        
        /// <summary>
        /// Change altitude set point.
        /// Mission Param #1 : Altitude in meters
        /// Mission Param #2 : Mav frame of new altitude (see MAV_FRAME)
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_CHANGE_ALTITUDE
        /// </remarks>
        [Description("Change altitude set point.")]
        DoChangeAltitude = 186,
        
        /// <summary>
        /// Mission command to perform a landing. This is used as a marker in a mission to tell the autopilot where a sequence of mission items that represents a landing starts. It may also be sent via a COMMAND_LONG to trigger a landing, in which case the nearest (geographically) landing sequence in the mission will be used. The Latitude/Longitude is optional, and may be set to 0 if not needed. If specified then it will be used to help find the closest landing sequence.
        /// Mission Param #1 : Empty
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_LAND_START
        /// </remarks>
        [Description(@"Mission command to perform a landing. This is used as a marker in a mission to tell the autopilot where a sequence of mission items that represents a landing starts. It may also be sent via a COMMAND_LONG to trigger a landing, in which case the nearest (geographically) landing sequence in the mission will be used. The Latitude/Longitude is optional, and may be set to 0 if not needed. If specified then it will be used to help find the closest landing sequence.")]
        DoLandStart = 189,
        
        /// <summary>
        /// Mission command to perform a landing from a rally point.
        /// Mission Param #1 : Break altitude (meters)
        /// Mission Param #2 : Landing speed (m/s)
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_RALLY_LAND
        /// </remarks>
        [Description("Mission command to perform a landing from a rally point.")]
        DoRallyLand = 190,
        
        /// <summary>
        /// Mission command to safely abort an autonmous landing.
        /// Mission Param #1 : Altitude (meters)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_GO_AROUND
        /// </remarks>
        [Description("Mission command to safely abort an autonmous landing.")]
        DoGoAround = 191,
        
        /// <summary>
        /// Reposition the vehicle to a specific WGS84 global position.
        /// Mission Param #1 : Ground speed, less than 0 (-1) for default
        /// Mission Param #2 : Bitmask of option flags, see the MAV_DO_REPOSITION_FLAGS enum.
        /// Mission Param #3 : Reserved
        /// Mission Param #4 : Yaw heading, NaN for unchanged. For planes indicates loiter direction (0: clockwise, 1: counter clockwise)
        /// Mission Param #5 : Latitude (deg * 1E7)
        /// Mission Param #6 : Longitude (deg * 1E7)
        /// Mission Param #7 : Altitude (meters)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_REPOSITION
        /// </remarks>
        [Description("Reposition the vehicle to a specific WGS84 global position.")]
        DoReposition = 192,
        
        /// <summary>
        /// If in a GPS controlled position mode, hold the current position or continue.
        /// Mission Param #1 : 0: Pause current mission or reposition command, hold current position. 1: Continue mission. A VTOL capable vehicle should enter hover mode (multicopter and VTOL planes). A plane should loiter with the default loiter radius.
        /// Mission Param #2 : Reserved
        /// Mission Param #3 : Reserved
        /// Mission Param #4 : Reserved
        /// Mission Param #5 : Reserved
        /// Mission Param #6 : Reserved
        /// Mission Param #7 : Reserved
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_PAUSE_CONTINUE
        /// </remarks>
        [Description("If in a GPS controlled position mode, hold the current position or continue.")]
        DoPauseContinue = 193,
        
        /// <summary>
        /// Set moving direction to forward or reverse.
        /// Mission Param #1 : Direction (0=Forward, 1=Reverse)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_REVERSE
        /// </remarks>
        [Description("Set moving direction to forward or reverse.")]
        DoSetReverse = 194,
        
        /// <summary>
        /// Sets the region of interest (ROI) to a location. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras.
        /// Mission Param #1 : Empty
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_ROI_LOCATION
        /// </remarks>
        [Description("Sets the region of interest (ROI) to a location. This can then be used by the veh" +
            "icles control system to control the vehicle attitude and the attitude of various" +
            " sensors such as cameras.")]
        DoSetRoiLocation = 195,
        
        /// <summary>
        /// Sets the region of interest (ROI) to be toward next waypoint, with optional pitch/roll/yaw offset. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras.
        /// Mission Param #1 : Empty
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : pitch offset from next waypoint
        /// Mission Param #6 : roll offset from next waypoint
        /// Mission Param #7 : yaw offset from next waypoint
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_ROI_WPNEXT_OFFSET
        /// </remarks>
        [Description("Sets the region of interest (ROI) to be toward next waypoint, with optional pitch" +
            "/roll/yaw offset. This can then be used by the vehicles control system to contro" +
            "l the vehicle attitude and the attitude of various sensors such as cameras.")]
        DoSetRoiWpnextOffset = 196,
        
        /// <summary>
        /// Cancels any previous ROI command returning the vehicle/sensors to default flight characteristics. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras.
        /// Mission Param #1 : Empty
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_ROI_NONE
        /// </remarks>
        [Description("Cancels any previous ROI command returning the vehicle/sensors to default flight " +
            "characteristics. This can then be used by the vehicles control system to control" +
            " the vehicle attitude and the attitude of various sensors such as cameras.")]
        DoSetRoiNone = 197,
        
        /// <summary>
        /// Control onboard camera system.
        /// Mission Param #1 : Camera ID (-1 for all)
        /// Mission Param #2 : Transmission: 0: disabled, 1: enabled compressed, 2: enabled raw
        /// Mission Param #3 : Transmission mode: 0: video stream, >0: single images every n seconds (decimal)
        /// Mission Param #4 : Recording: 0: disabled, 1: enabled compressed, 2: enabled raw
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_CONTROL_VIDEO
        /// </remarks>
        [Description("Control onboard camera system.")]
        DoControlVideo = 200,
        
        /// <summary>
        /// THIS INTERFACE IS DEPRECATED AS OF JANUARY 2018. Please use MAV_CMD_DO_SET_ROI_* messages instead. Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras.
        /// Mission Param #1 : Region of intereset mode. (see MAV_ROI enum)
        /// Mission Param #2 : Waypoint index/ target ID. (see MAV_ROI enum)
        /// Mission Param #3 : ROI index (allows a vehicle to manage multiple ROI's)
        /// Mission Param #4 : Empty
        /// Mission Param #5 : MAV_ROI_WPNEXT: pitch offset from next waypoint, MAV_ROI_LOCATION: latitude
        /// Mission Param #6 : MAV_ROI_WPNEXT: roll offset from next waypoint, MAV_ROI_LOCATION: longitude
        /// Mission Param #7 : MAV_ROI_WPNEXT: yaw offset from next waypoint, MAV_ROI_LOCATION: altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_ROI
        /// </remarks>
        [Description(@"THIS INTERFACE IS DEPRECATED AS OF JANUARY 2018. Please use MAV_CMD_DO_SET_ROI_* messages instead. Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicles control system to control the vehicle attitude and the attitude of various sensors such as cameras.")]
        DoSetRoi = 201,
        
        /// <summary>
        /// THIS INTERFACE IS DEPRECATED since 2018-01. Please use PARAM_EXT_XXX messages and the camera definition format described in https://mavlink.io/en/protocol/camera_def.html.
        /// Mission Param #1 : Modes: P, TV, AV, M, Etc
        /// Mission Param #2 : Shutter speed: Divisor number for one second
        /// Mission Param #3 : Aperture: F stop number
        /// Mission Param #4 : ISO number e.g. 80, 100, 200, Etc
        /// Mission Param #5 : Exposure type enumerator
        /// Mission Param #6 : Command Identity
        /// Mission Param #7 : Main engine cut-off time before camera trigger in seconds/10 (0 means no cut-off)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_DIGICAM_CONFIGURE
        /// </remarks>
        [Description("THIS INTERFACE IS DEPRECATED since 2018-01. Please use PARAM_EXT_XXX messages and" +
            " the camera definition format described in https://mavlink.io/en/protocol/camera" +
            "_def.html.")]
        DoDigicamConfigure = 202,
        
        /// <summary>
        /// THIS INTERFACE IS DEPRECATED since 2018-01. Please use PARAM_EXT_XXX messages and the camera definition format described in https://mavlink.io/en/protocol/camera_def.html.
        /// Mission Param #1 : Session control e.g. show/hide lens
        /// Mission Param #2 : Zoom's absolute position
        /// Mission Param #3 : Zooming step value to offset zoom from the current position
        /// Mission Param #4 : Focus Locking, Unlocking or Re-locking
        /// Mission Param #5 : Shooting Command
        /// Mission Param #6 : Command Identity
        /// Mission Param #7 : Test shot identifier. If set to 1, image will only be captured, but not counted towards internal frame count.
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_DIGICAM_CONTROL
        /// </remarks>
        [Description("THIS INTERFACE IS DEPRECATED since 2018-01. Please use PARAM_EXT_XXX messages and" +
            " the camera definition format described in https://mavlink.io/en/protocol/camera" +
            "_def.html.")]
        DoDigicamControl = 203,
        
        /// <summary>
        /// Mission command to configure a camera or antenna mount
        /// Mission Param #1 : Mount operation mode (see MAV_MOUNT_MODE enum)
        /// Mission Param #2 : stabilize roll? (1 = yes, 0 = no)
        /// Mission Param #3 : stabilize pitch? (1 = yes, 0 = no)
        /// Mission Param #4 : stabilize yaw? (1 = yes, 0 = no)
        /// Mission Param #5 : roll input (0 = angle, 1 = angular rate)
        /// Mission Param #6 : pitch input (0 = angle, 1 = angular rate)
        /// Mission Param #7 : yaw input (0 = angle, 1 = angular rate)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_MOUNT_CONFIGURE
        /// </remarks>
        [Description("Mission command to configure a camera or antenna mount")]
        DoMountConfigure = 204,
        
        /// <summary>
        /// Mission command to control a camera or antenna mount
        /// Mission Param #1 : pitch depending on mount mode (degrees or degrees/second depending on pitch input).
        /// Mission Param #2 : roll depending on mount mode (degrees or degrees/second depending on roll input).
        /// Mission Param #3 : yaw depending on mount mode (degrees or degrees/second depending on yaw input).
        /// Mission Param #4 : alt in meters depending on mount mode.
        /// Mission Param #5 : latitude in degrees * 1E7, set if appropriate mount mode.
        /// Mission Param #6 : longitude in degrees * 1E7, set if appropriate mount mode.
        /// Mission Param #7 : MAV_MOUNT_MODE enum value
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_MOUNT_CONTROL
        /// </remarks>
        [Description("Mission command to control a camera or antenna mount")]
        DoMountControl = 205,
        
        /// <summary>
        /// Mission command to set camera trigger distance for this flight. The camera is trigerred each time this distance is exceeded. This command can also be used to set the shutter integration time for the camera.
        /// Mission Param #1 : Camera trigger distance (meters). 0 to stop triggering.
        /// Mission Param #2 : Camera shutter integration time (milliseconds). -1 or 0 to ignore
        /// Mission Param #3 : Trigger camera once immediately. (0 = no trigger, 1 = trigger)
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_CAM_TRIGG_DIST
        /// </remarks>
        [Description("Mission command to set camera trigger distance for this flight. The camera is tri" +
            "gerred each time this distance is exceeded. This command can also be used to set" +
            " the shutter integration time for the camera.")]
        DoSetCamTriggDist = 206,
        
        /// <summary>
        /// Mission command to enable the geofence
        /// Mission Param #1 : enable? (0=disable, 1=enable, 2=disable_floor_only)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_FENCE_ENABLE
        /// </remarks>
        [Description("Mission command to enable the geofence")]
        DoFenceEnable = 207,
        
        /// <summary>
        /// Mission command to trigger a parachute
        /// Mission Param #1 : action (0=disable, 1=enable, 2=release, for some systems see PARACHUTE_ACTION enum, not in general message set.)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_PARACHUTE
        /// </remarks>
        [Description("Mission command to trigger a parachute")]
        DoParachute = 208,
        
        /// <summary>
        /// Mission command to perform motor test
        /// Mission Param #1 : motor number (a number from 1 to max number of motors on the vehicle)
        /// Mission Param #2 : throttle type (0=throttle percentage, 1=PWM, 2=pilot throttle channel pass-through. See MOTOR_TEST_THROTTLE_TYPE enum)
        /// Mission Param #3 : throttle
        /// Mission Param #4 : timeout (in seconds)
        /// Mission Param #5 : motor count (number of motors to test to test in sequence, waiting for the timeout above between them; 0=1 motor, 1=1 motor, 2=2 motors...)
        /// Mission Param #6 : motor test order (See MOTOR_TEST_ORDER enum)
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_MOTOR_TEST
        /// </remarks>
        [Description("Mission command to perform motor test")]
        DoMotorTest = 209,
        
        /// <summary>
        /// Change to/from inverted flight
        /// Mission Param #1 : inverted (0=normal, 1=inverted)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_INVERTED_FLIGHT
        /// </remarks>
        [Description("Change to/from inverted flight")]
        DoInvertedFlight = 210,
        
        /// <summary>
        /// Sets a desired vehicle turn angle and speed change
        /// Mission Param #1 : yaw angle to adjust steering by in centidegress
        /// Mission Param #2 : speed - normalized to 0 .. 1
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_SET_YAW_SPEED
        /// </remarks>
        [Description("Sets a desired vehicle turn angle and speed change")]
        NavSetYawSpeed = 213,
        
        /// <summary>
        /// Mission command to set camera trigger interval for this flight. If triggering is enabled, the camera is triggered each time this interval expires. This command can also be used to set the shutter integration time for the camera.
        /// Mission Param #1 : Camera trigger cycle time (milliseconds). -1 or 0 to ignore.
        /// Mission Param #2 : Camera shutter integration time (milliseconds). Should be less than trigger cycle time. -1 or 0 to ignore.
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_SET_CAM_TRIGG_INTERVAL
        /// </remarks>
        [Description("Mission command to set camera trigger interval for this flight. If triggering is " +
            "enabled, the camera is triggered each time this interval expires. This command c" +
            "an also be used to set the shutter integration time for the camera.")]
        DoSetCamTriggInterval = 214,
        
        /// <summary>
        /// Mission command to control a camera or antenna mount, using a quaternion as reference.
        /// Mission Param #1 : q1 - quaternion param #1, w (1 in null-rotation)
        /// Mission Param #2 : q2 - quaternion param #2, x (0 in null-rotation)
        /// Mission Param #3 : q3 - quaternion param #3, y (0 in null-rotation)
        /// Mission Param #4 : q4 - quaternion param #4, z (0 in null-rotation)
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_MOUNT_CONTROL_QUAT
        /// </remarks>
        [Description("Mission command to control a camera or antenna mount, using a quaternion as refer" +
            "ence.")]
        DoMountControlQuat = 220,
        
        /// <summary>
        /// set id of master controller
        /// Mission Param #1 : System ID
        /// Mission Param #2 : Component ID
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_GUIDED_MASTER
        /// </remarks>
        [Description("set id of master controller")]
        DoGuidedMaster = 221,
        
        /// <summary>
        /// set limits for external control
        /// Mission Param #1 : timeout - maximum time (in seconds) that external controller will be allowed to control vehicle. 0 means no timeout
        /// Mission Param #2 : absolute altitude min (in meters, AMSL) - if vehicle moves below this alt, the command will be aborted and the mission will continue.  0 means no lower altitude limit
        /// Mission Param #3 : absolute altitude max (in meters)- if vehicle moves above this alt, the command will be aborted and the mission will continue.  0 means no upper altitude limit
        /// Mission Param #4 : horizontal move limit (in meters, AMSL) - if vehicle moves more than this distance from it's location at the moment the command was executed, the command will be aborted and the mission will continue. 0 means no horizontal altitude limit
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_GUIDED_LIMITS
        /// </remarks>
        [Description("set limits for external control")]
        DoGuidedLimits = 222,
        
        /// <summary>
        /// Control vehicle engine. This is interpreted by the vehicles engine controller to change the target engine state. It is intended for vehicles with internal combustion engines
        /// Mission Param #1 : 0: Stop engine, 1:Start Engine
        /// Mission Param #2 : 0: Warm start, 1:Cold start. Controls use of choke where applicable
        /// Mission Param #3 : Height delay (meters). This is for commanding engine start only after the vehicle has gained the specified height. Used in VTOL vehicles during takeoff to start engine after the aircraft is off the ground. Zero for no delay.
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_ENGINE_CONTROL
        /// </remarks>
        [Description("Control vehicle engine. This is interpreted by the vehicles engine controller to " +
            "change the target engine state. It is intended for vehicles with internal combus" +
            "tion engines")]
        DoEngineControl = 223,
        
        /// <summary>
        /// NOP - This command is only used to mark the upper limit of the DO commands in the enumeration
        /// Mission Param #1 : Empty
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_LAST
        /// </remarks>
        [Description("NOP - This command is only used to mark the upper limit of the DO commands in the" +
            " enumeration")]
        DoLast = 240,
        
        /// <summary>
        /// Trigger calibration. This command will be only accepted if in pre-flight mode. Except for Temperature Calibration, only one sensor should be set in a single message and all others should be zero.
        /// Mission Param #1 : 1: gyro calibration, 3: gyro temperature calibration
        /// Mission Param #2 : 1: magnetometer calibration
        /// Mission Param #3 : 1: ground pressure calibration
        /// Mission Param #4 : 1: radio RC calibration, 2: RC trim calibration
        /// Mission Param #5 : 1: accelerometer calibration, 2: board level calibration, 3: accelerometer temperature calibration, 4: simple accelerometer calibration
        /// Mission Param #6 : 1: APM: compass/motor interference calibration (PX4: airspeed calibration, deprecated), 2: airspeed calibration
        /// Mission Param #7 : 1: ESC calibration, 3: barometer temperature calibration
        /// </summary>
        /// <remarks>
        /// MAV_CMD_PREFLIGHT_CALIBRATION
        /// </remarks>
        [Description("Trigger calibration. This command will be only accepted if in pre-flight mode. Ex" +
            "cept for Temperature Calibration, only one sensor should be set in a single mess" +
            "age and all others should be zero.")]
        PreflightCalibration = 241,
        
        /// <summary>
        /// Set sensor offsets. This command will be only accepted if in pre-flight mode.
        /// Mission Param #1 : Sensor to adjust the offsets for: 0: gyros, 1: accelerometer, 2: magnetometer, 3: barometer, 4: optical flow, 5: second magnetometer, 6: third magnetometer
        /// Mission Param #2 : X axis offset (or generic dimension 1), in the sensor's raw units
        /// Mission Param #3 : Y axis offset (or generic dimension 2), in the sensor's raw units
        /// Mission Param #4 : Z axis offset (or generic dimension 3), in the sensor's raw units
        /// Mission Param #5 : Generic dimension 4, in the sensor's raw units
        /// Mission Param #6 : Generic dimension 5, in the sensor's raw units
        /// Mission Param #7 : Generic dimension 6, in the sensor's raw units
        /// </summary>
        /// <remarks>
        /// MAV_CMD_PREFLIGHT_SET_SENSOR_OFFSETS
        /// </remarks>
        [Description("Set sensor offsets. This command will be only accepted if in pre-flight mode.")]
        PreflightSetSensorOffsets = 242,
        
        /// <summary>
        /// Trigger UAVCAN config. This command will be only accepted if in pre-flight mode.
        /// Mission Param #1 : 1: Trigger actuator ID assignment and direction mapping.
        /// Mission Param #2 : Reserved
        /// Mission Param #3 : Reserved
        /// Mission Param #4 : Reserved
        /// Mission Param #5 : Reserved
        /// Mission Param #6 : Reserved
        /// Mission Param #7 : Reserved
        /// </summary>
        /// <remarks>
        /// MAV_CMD_PREFLIGHT_UAVCAN
        /// </remarks>
        [Description("Trigger UAVCAN config. This command will be only accepted if in pre-flight mode.")]
        PreflightUavcan = 243,
        
        /// <summary>
        /// Request storage of different parameter values and logs. This command will be only accepted if in pre-flight mode.
        /// Mission Param #1 : Parameter storage: 0: READ FROM FLASH/EEPROM, 1: WRITE CURRENT TO FLASH/EEPROM, 2: Reset to defaults
        /// Mission Param #2 : Mission storage: 0: READ FROM FLASH/EEPROM, 1: WRITE CURRENT TO FLASH/EEPROM, 2: Reset to defaults
        /// Mission Param #3 : Onboard logging: 0: Ignore, 1: Start default rate logging, -1: Stop logging, > 1: start logging with rate of param 3 in Hz (e.g. set to 1000 for 1000 Hz logging)
        /// Mission Param #4 : Reserved
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_PREFLIGHT_STORAGE
        /// </remarks>
        [Description("Request storage of different parameter values and logs. This command will be only" +
            " accepted if in pre-flight mode.")]
        PreflightStorage = 245,
        
        /// <summary>
        /// Request the reboot or shutdown of system components.
        /// Mission Param #1 : 0: Do nothing for autopilot, 1: Reboot autopilot, 2: Shutdown autopilot, 3: Reboot autopilot and keep it in the bootloader until upgraded.
        /// Mission Param #2 : 0: Do nothing for onboard computer, 1: Reboot onboard computer, 2: Shutdown onboard computer, 3: Reboot onboard computer and keep it in the bootloader until upgraded.
        /// Mission Param #3 : WIP: 0: Do nothing for camera, 1: Reboot onboard camera, 2: Shutdown onboard camera, 3: Reboot onboard camera and keep it in the bootloader until upgraded
        /// Mission Param #4 : WIP: 0: Do nothing for mount (e.g. gimbal), 1: Reboot mount, 2: Shutdown mount, 3: Reboot mount and keep it in the bootloader until upgraded
        /// Mission Param #5 : Reserved, send 0
        /// Mission Param #6 : Reserved, send 0
        /// Mission Param #7 : WIP: ID (e.g. camera ID -1 for all IDs)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_PREFLIGHT_REBOOT_SHUTDOWN
        /// </remarks>
        [Description("Request the reboot or shutdown of system components.")]
        PreflightRebootShutdown = 246,
        
        /// <summary>
        /// Hold / continue the current action
        /// Mission Param #1 : MAV_GOTO_DO_HOLD: hold MAV_GOTO_DO_CONTINUE: continue with next item in mission plan
        /// Mission Param #2 : MAV_GOTO_HOLD_AT_CURRENT_POSITION: Hold at current position MAV_GOTO_HOLD_AT_SPECIFIED_POSITION: hold at specified position
        /// Mission Param #3 : MAV_FRAME coordinate frame of hold point
        /// Mission Param #4 : Desired yaw angle in degrees
        /// Mission Param #5 : Latitude / X position
        /// Mission Param #6 : Longitude / Y position
        /// Mission Param #7 : Altitude / Z position
        /// </summary>
        /// <remarks>
        /// MAV_CMD_OVERRIDE_GOTO
        /// </remarks>
        [Description("Hold / continue the current action")]
        OverrideGoto = 252,
        
        /// <summary>
        /// start running a mission
        /// Mission Param #1 : first_item: the first mission item to run
        /// Mission Param #2 : last_item:  the last mission item to run (after this item is run, the mission ends)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_MISSION_START
        /// </remarks>
        [Description("start running a mission")]
        MissionStart = 300,
        
        /// <summary>
        /// Arms / Disarms a component
        /// Mission Param #1 : 1 to arm, 0 to disarm
        /// </summary>
        /// <remarks>
        /// MAV_CMD_COMPONENT_ARM_DISARM
        /// </remarks>
        [Description("Arms / Disarms a component")]
        ComponentArmDisarm = 400,
        
        /// <summary>
        /// Request the home position from the vehicle.
        /// Mission Param #1 : Reserved
        /// Mission Param #2 : Reserved
        /// Mission Param #3 : Reserved
        /// Mission Param #4 : Reserved
        /// Mission Param #5 : Reserved
        /// Mission Param #6 : Reserved
        /// Mission Param #7 : Reserved
        /// </summary>
        /// <remarks>
        /// MAV_CMD_GET_HOME_POSITION
        /// </remarks>
        [Description("Request the home position from the vehicle.")]
        GetHomePosition = 410,
        
        /// <summary>
        /// Starts receiver pairing
        /// Mission Param #1 : 0:Spektrum
        /// Mission Param #2 : 0:Spektrum DSM2, 1:Spektrum DSMX
        /// </summary>
        /// <remarks>
        /// MAV_CMD_START_RX_PAIR
        /// </remarks>
        [Description("Starts receiver pairing")]
        StartRxPair = 500,
        
        /// <summary>
        /// Request the interval between messages for a particular MAVLink message ID
        /// Mission Param #1 : The MAVLink message ID
        /// </summary>
        /// <remarks>
        /// MAV_CMD_GET_MESSAGE_INTERVAL
        /// </remarks>
        [Description("Request the interval between messages for a particular MAVLink message ID")]
        GetMessageInterval = 510,
        
        /// <summary>
        /// Request the interval between messages for a particular MAVLink message ID. This interface replaces REQUEST_DATA_STREAM
        /// Mission Param #1 : The MAVLink message ID
        /// Mission Param #2 : The interval between two messages, in microseconds. Set to -1 to disable and 0 to request default rate.
        /// </summary>
        /// <remarks>
        /// MAV_CMD_SET_MESSAGE_INTERVAL
        /// </remarks>
        [Description("Request the interval between messages for a particular MAVLink message ID. This i" +
            "nterface replaces REQUEST_DATA_STREAM")]
        SetMessageInterval = 511,
        
        /// <summary>
        /// Request MAVLink protocol version compatibility
        /// Mission Param #1 : 1: Request supported protocol versions by all nodes on the network
        /// Mission Param #2 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_REQUEST_PROTOCOL_VERSION
        /// </remarks>
        [Description("Request MAVLink protocol version compatibility")]
        RequestProtocolVersion = 519,
        
        /// <summary>
        /// Request autopilot capabilities
        /// Mission Param #1 : 1: Request autopilot version
        /// Mission Param #2 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_REQUEST_AUTOPILOT_CAPABILITIES
        /// </remarks>
        [Description("Request autopilot capabilities")]
        RequestAutopilotCapabilities = 520,
        
        /// <summary>
        /// Request camera information (CAMERA_INFORMATION).
        /// Mission Param #1 : 0: No action 1: Request camera capabilities
        /// Mission Param #2 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_REQUEST_CAMERA_INFORMATION
        /// </remarks>
        [Description("Request camera information (CAMERA_INFORMATION).")]
        RequestCameraInformation = 521,
        
        /// <summary>
        /// Request camera settings (CAMERA_SETTINGS).
        /// Mission Param #1 : 0: No Action 1: Request camera settings
        /// Mission Param #2 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_REQUEST_CAMERA_SETTINGS
        /// </remarks>
        [Description("Request camera settings (CAMERA_SETTINGS).")]
        RequestCameraSettings = 522,
        
        /// <summary>
        /// WIP: Request storage information (STORAGE_INFORMATION). Use the command's target_component to target a specific component's storage.
        /// Mission Param #1 : Storage ID (0 for all, 1 for first, 2 for second, etc.)
        /// Mission Param #2 : 0: No Action 1: Request storage information
        /// Mission Param #3 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_REQUEST_STORAGE_INFORMATION
        /// </remarks>
        [Description("WIP: Request storage information (STORAGE_INFORMATION). Use the command\'s target_" +
            "component to target a specific component\'s storage.")]
        RequestStorageInformation = 525,
        
        /// <summary>
        /// WIP: Format a storage medium. Once format is complete, a STORAGE_INFORMATION message is sent. Use the command's target_component to target a specific component's storage.
        /// Mission Param #1 : Storage ID (1 for first, 2 for second, etc.)
        /// Mission Param #2 : 0: No action 1: Format storage
        /// Mission Param #3 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_STORAGE_FORMAT
        /// </remarks>
        [Description("WIP: Format a storage medium. Once format is complete, a STORAGE_INFORMATION mess" +
            "age is sent. Use the command\'s target_component to target a specific component\'s" +
            " storage.")]
        StorageFormat = 526,
        
        /// <summary>
        /// Request camera capture status (CAMERA_CAPTURE_STATUS)
        /// Mission Param #1 : 0: No Action 1: Request camera capture status
        /// Mission Param #2 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_REQUEST_CAMERA_CAPTURE_STATUS
        /// </remarks>
        [Description("Request camera capture status (CAMERA_CAPTURE_STATUS)")]
        RequestCameraCaptureStatus = 527,
        
        /// <summary>
        /// WIP: Request flight information (FLIGHT_INFORMATION)
        /// Mission Param #1 : 1: Request flight information
        /// Mission Param #2 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_REQUEST_FLIGHT_INFORMATION
        /// </remarks>
        [Description("WIP: Request flight information (FLIGHT_INFORMATION)")]
        RequestFlightInformation = 528,
        
        /// <summary>
        /// Reset all camera settings to Factory Default
        /// Mission Param #1 : 0: No Action 1: Reset all settings
        /// Mission Param #2 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_RESET_CAMERA_SETTINGS
        /// </remarks>
        [Description("Reset all camera settings to Factory Default")]
        ResetCameraSettings = 529,
        
        /// <summary>
        /// Set camera running mode. Use NAN for reserved values.
        /// Mission Param #1 : Reserved (Set to 0)
        /// Mission Param #2 : Camera mode (see CAMERA_MODE enum)
        /// Mission Param #3 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_SET_CAMERA_MODE
        /// </remarks>
        [Description("Set camera running mode. Use NAN for reserved values.")]
        SetCameraMode = 530,
        
        /// <summary>
        /// Start image capture sequence. Sends CAMERA_IMAGE_CAPTURED after each capture. Use NAN for reserved values.
        /// Mission Param #1 : Reserved (Set to 0)
        /// Mission Param #2 : Duration between two consecutive pictures (in seconds)
        /// Mission Param #3 : Number of images to capture total - 0 for unlimited capture
        /// Mission Param #4 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_IMAGE_START_CAPTURE
        /// </remarks>
        [Description("Start image capture sequence. Sends CAMERA_IMAGE_CAPTURED after each capture. Use" +
            " NAN for reserved values.")]
        ImageStartCapture = 2000,
        
        /// <summary>
        /// Stop image capture sequence Use NAN for reserved values.
        /// Mission Param #1 : Reserved (Set to 0)
        /// Mission Param #2 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_IMAGE_STOP_CAPTURE
        /// </remarks>
        [Description("Stop image capture sequence Use NAN for reserved values.")]
        ImageStopCapture = 2001,
        
        /// <summary>
        /// WIP: Re-request a CAMERA_IMAGE_CAPTURE packet. Use NAN for reserved values.
        /// Mission Param #1 : Sequence number for missing CAMERA_IMAGE_CAPTURE packet
        /// Mission Param #2 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_REQUEST_CAMERA_IMAGE_CAPTURE
        /// </remarks>
        [Description("WIP: Re-request a CAMERA_IMAGE_CAPTURE packet. Use NAN for reserved values.")]
        RequestCameraImageCapture = 2002,
        
        /// <summary>
        /// Enable or disable on-board camera triggering system.
        /// Mission Param #1 : Trigger enable/disable (0 for disable, 1 for start), -1 to ignore
        /// Mission Param #2 : 1 to reset the trigger sequence, -1 or 0 to ignore
        /// Mission Param #3 : 1 to pause triggering, but without switching the camera off or retracting it. -1 to ignore
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_TRIGGER_CONTROL
        /// </remarks>
        [Description("Enable or disable on-board camera triggering system.")]
        DoTriggerControl = 2003,
        
        /// <summary>
        /// Starts video capture (recording). Use NAN for reserved values.
        /// Mission Param #1 : Reserved (Set to 0)
        /// Mission Param #2 : Frequency CAMERA_CAPTURE_STATUS messages should be sent while recording (0 for no messages, otherwise frequency in Hz)
        /// Mission Param #3 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_VIDEO_START_CAPTURE
        /// </remarks>
        [Description("Starts video capture (recording). Use NAN for reserved values.")]
        VideoStartCapture = 2500,
        
        /// <summary>
        /// Stop the current video capture (recording). Use NAN for reserved values.
        /// Mission Param #1 : Reserved (Set to 0)
        /// Mission Param #2 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_VIDEO_STOP_CAPTURE
        /// </remarks>
        [Description("Stop the current video capture (recording). Use NAN for reserved values.")]
        VideoStopCapture = 2501,
        
        /// <summary>
        /// WIP: Start video streaming
        /// Mission Param #1 : Camera ID (0 for all cameras, 1 for first, 2 for second, etc.)
        /// Mission Param #2 : Reserved
        /// </summary>
        /// <remarks>
        /// MAV_CMD_VIDEO_START_STREAMING
        /// </remarks>
        [Description("WIP: Start video streaming")]
        VideoStartStreaming = 2502,
        
        /// <summary>
        /// WIP: Stop the current video streaming
        /// Mission Param #1 : Camera ID (0 for all cameras, 1 for first, 2 for second, etc.)
        /// Mission Param #2 : Reserved
        /// </summary>
        /// <remarks>
        /// MAV_CMD_VIDEO_STOP_STREAMING
        /// </remarks>
        [Description("WIP: Stop the current video streaming")]
        VideoStopStreaming = 2503,
        
        /// <summary>
        /// WIP: Request video stream information (VIDEO_STREAM_INFORMATION)
        /// Mission Param #1 : Camera ID (0 for all cameras, 1 for first, 2 for second, etc.)
        /// Mission Param #2 : 0: No Action 1: Request video stream information
        /// Mission Param #3 : Reserved (all remaining params)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_REQUEST_VIDEO_STREAM_INFORMATION
        /// </remarks>
        [Description("WIP: Request video stream information (VIDEO_STREAM_INFORMATION)")]
        RequestVideoStreamInformation = 2504,
        
        /// <summary>
        /// Request to start streaming logging data over MAVLink (see also LOGGING_DATA message)
        /// Mission Param #1 : Format: 0: ULog
        /// Mission Param #2 : Reserved (set to 0)
        /// Mission Param #3 : Reserved (set to 0)
        /// Mission Param #4 : Reserved (set to 0)
        /// Mission Param #5 : Reserved (set to 0)
        /// Mission Param #6 : Reserved (set to 0)
        /// Mission Param #7 : Reserved (set to 0)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_LOGGING_START
        /// </remarks>
        [Description("Request to start streaming logging data over MAVLink (see also LOGGING_DATA messa" +
            "ge)")]
        LoggingStart = 2510,
        
        /// <summary>
        /// Request to stop streaming log data over MAVLink
        /// Mission Param #1 : Reserved (set to 0)
        /// Mission Param #2 : Reserved (set to 0)
        /// Mission Param #3 : Reserved (set to 0)
        /// Mission Param #4 : Reserved (set to 0)
        /// Mission Param #5 : Reserved (set to 0)
        /// Mission Param #6 : Reserved (set to 0)
        /// Mission Param #7 : Reserved (set to 0)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_LOGGING_STOP
        /// </remarks>
        [Description("Request to stop streaming log data over MAVLink")]
        LoggingStop = 2511,
        
        /// <summary>
        /// 
        /// Mission Param #1 : Landing gear ID (default: 0, -1 for all)
        /// Mission Param #2 : Landing gear position (Down: 0, Up: 1, NAN for no change)
        /// Mission Param #3 : Reserved, set to NAN
        /// Mission Param #4 : Reserved, set to NAN
        /// Mission Param #5 : Reserved, set to NAN
        /// Mission Param #6 : Reserved, set to NAN
        /// Mission Param #7 : Reserved, set to NAN
        /// </summary>
        /// <remarks>
        /// MAV_CMD_AIRFRAME_CONFIGURATION
        /// </remarks>
        [Description(null)]
        AirframeConfiguration = 2520,
        
        /// <summary>
        /// Request to start/stop transmitting over the high latency telemetry
        /// Mission Param #1 : Control transmittion over high latency telemetry (0: stop, 1: start)
        /// Mission Param #2 : Empty
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Empty
        /// Mission Param #6 : Empty
        /// Mission Param #7 : Empty
        /// </summary>
        /// <remarks>
        /// MAV_CMD_CONTROL_HIGH_LATENCY
        /// </remarks>
        [Description("Request to start/stop transmitting over the high latency telemetry")]
        ControlHighLatency = 2600,
        
        /// <summary>
        /// Create a panorama at the current position
        /// Mission Param #1 : Viewing angle horizontal of the panorama (in degrees, +- 0.5 the total angle)
        /// Mission Param #2 : Viewing angle vertical of panorama (in degrees)
        /// Mission Param #3 : Speed of the horizontal rotation (in degrees per second)
        /// Mission Param #4 : Speed of the vertical rotation (in degrees per second)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_PANORAMA_CREATE
        /// </remarks>
        [Description("Create a panorama at the current position")]
        PanoramaCreate = 2800,
        
        /// <summary>
        /// Request VTOL transition
        /// Mission Param #1 : The target VTOL state, as defined by ENUM MAV_VTOL_STATE. Only MAV_VTOL_STATE_MC and MAV_VTOL_STATE_FW can be used.
        /// </summary>
        /// <remarks>
        /// MAV_CMD_DO_VTOL_TRANSITION
        /// </remarks>
        [Description("Request VTOL transition")]
        DoVtolTransition = 3000,
        
        /// <summary>
        /// This command sets the submode to standard guided when vehicle is in guided mode. The vehicle holds position and altitude and the user can input the desired velocites along all three axes.
        /// </summary>
        /// <remarks>
        /// MAV_CMD_SET_GUIDED_SUBMODE_STANDARD
        /// </remarks>
        [Description("This command sets the submode to standard guided when vehicle is in guided mode. " +
            "The vehicle holds position and altitude and the user can input the desired veloc" +
            "ites along all three axes.")]
        SetGuidedSubmodeStandard = 4000,
        
        /// <summary>
        /// This command sets submode circle when vehicle is in guided mode. Vehicle flies along a circle facing the center of the circle. The user can input the velocity along the circle and change the radius. If no input is given the vehicle will hold position.
        /// Mission Param #1 : Radius of desired circle in CIRCLE_MODE
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : Unscaled target latitude of center of circle in CIRCLE_MODE
        /// Mission Param #6 : Unscaled target longitude of center of circle in CIRCLE_MODE
        /// </summary>
        /// <remarks>
        /// MAV_CMD_SET_GUIDED_SUBMODE_CIRCLE
        /// </remarks>
        [Description("This command sets submode circle when vehicle is in guided mode. Vehicle flies al" +
            "ong a circle facing the center of the circle. The user can input the velocity al" +
            "ong the circle and change the radius. If no input is given the vehicle will hold" +
            " position.")]
        SetGuidedSubmodeCircle = 4001,
        
        /// <summary>
        /// WIP: Delay mission state machine until gate has been reached.
        /// Mission Param #1 : Geometry: 0: orthogonal to path between previous and next waypoint.
        /// Mission Param #2 : Altitude: 0: ignore altitude
        /// Mission Param #3 : Empty
        /// Mission Param #4 : Empty
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_CONDITION_GATE
        /// </remarks>
        [Description("WIP: Delay mission state machine until gate has been reached.")]
        ConditionGate = 4501,
        
        /// <summary>
        /// Request authorization to arm the vehicle to a external entity, the arm authorizer is resposible to request all data that is needs from the vehicle before authorize or deny the request. If approved the progress of command_ack message should be set with period of time that this authorization is valid in seconds or in case it was denied it should be set with one of the reasons in ARM_AUTH_DENIED_REASON.
        /// Mission Param #1 : Vehicle system id, this way ground station can request arm authorization on behalf of any vehicle
        /// </summary>
        /// <remarks>
        /// MAV_CMD_ARM_AUTHORIZATION_REQUEST
        /// </remarks>
        [Description(@"Request authorization to arm the vehicle to a external entity, the arm authorizer is resposible to request all data that is needs from the vehicle before authorize or deny the request. If approved the progress of command_ack message should be set with period of time that this authorization is valid in seconds or in case it was denied it should be set with one of the reasons in ARM_AUTH_DENIED_REASON.")]
        ArmAuthorizationRequest = 3001,
        
        /// <summary>
        /// Fence return point. There can only be one fence return point.
        /// Mission Param #1 : Reserved
        /// Mission Param #2 : Reserved
        /// Mission Param #3 : Reserved
        /// Mission Param #4 : Reserved
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_FENCE_RETURN_POINT
        /// </remarks>
        [Description("Fence return point. There can only be one fence return point.")]
        NavFenceReturnPoint = 5000,
        
        /// <summary>
        /// Fence vertex for an inclusion polygon (the polygon must not be self-intersecting). The vehicle must stay within this area. Minimum of 3 vertices required.
        /// Mission Param #1 : Polygon vertex count
        /// Mission Param #2 : Reserved
        /// Mission Param #3 : Reserved
        /// Mission Param #4 : Reserved
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Reserved
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_FENCE_POLYGON_VERTEX_INCLUSION
        /// </remarks>
        [Description("Fence vertex for an inclusion polygon (the polygon must not be self-intersecting)" +
            ". The vehicle must stay within this area. Minimum of 3 vertices required.")]
        NavFencePolygonVertexInclusion = 5001,
        
        /// <summary>
        /// Fence vertex for an exclusion polygon (the polygon must not be self-intersecting). The vehicle must stay outside this area. Minimum of 3 vertices required.
        /// Mission Param #1 : Polygon vertex count
        /// Mission Param #2 : Reserved
        /// Mission Param #3 : Reserved
        /// Mission Param #4 : Reserved
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Reserved
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_FENCE_POLYGON_VERTEX_EXCLUSION
        /// </remarks>
        [Description("Fence vertex for an exclusion polygon (the polygon must not be self-intersecting)" +
            ". The vehicle must stay outside this area. Minimum of 3 vertices required.")]
        NavFencePolygonVertexExclusion = 5002,
        
        /// <summary>
        /// Circular fence area. The vehicle must stay inside this area.
        /// Mission Param #1 : radius in meters
        /// Mission Param #2 : Reserved
        /// Mission Param #3 : Reserved
        /// Mission Param #4 : Reserved
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Reserved
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_FENCE_CIRCLE_INCLUSION
        /// </remarks>
        [Description("Circular fence area. The vehicle must stay inside this area.")]
        NavFenceCircleInclusion = 5003,
        
        /// <summary>
        /// Circular fence area. The vehicle must stay outside this area.
        /// Mission Param #1 : radius in meters
        /// Mission Param #2 : Reserved
        /// Mission Param #3 : Reserved
        /// Mission Param #4 : Reserved
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Reserved
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_FENCE_CIRCLE_EXCLUSION
        /// </remarks>
        [Description("Circular fence area. The vehicle must stay outside this area.")]
        NavFenceCircleExclusion = 5004,
        
        /// <summary>
        /// Rally point. You can have multiple rally points defined.
        /// Mission Param #1 : Reserved
        /// Mission Param #2 : Reserved
        /// Mission Param #3 : Reserved
        /// Mission Param #4 : Reserved
        /// Mission Param #5 : Latitude
        /// Mission Param #6 : Longitude
        /// Mission Param #7 : Altitude
        /// </summary>
        /// <remarks>
        /// MAV_CMD_NAV_RALLY_POINT
        /// </remarks>
        [Description("Rally point. You can have multiple rally points defined.")]
        NavRallyPoint = 5100,
        
        /// <summary>
        /// Commands the vehicle to respond with a sequence of messages UAVCAN_NODE_INFO, one message per every UAVCAN node that is online. Note that some of the response messages can be lost, which the receiver can detect easily by checking whether every received UAVCAN_NODE_STATUS has a matching message UAVCAN_NODE_INFO received earlier; if not, this command should be sent again in order to request re-transmission of the node information messages.
        /// Mission Param #1 : Reserved (set to 0)
        /// Mission Param #2 : Reserved (set to 0)
        /// Mission Param #3 : Reserved (set to 0)
        /// Mission Param #4 : Reserved (set to 0)
        /// Mission Param #5 : Reserved (set to 0)
        /// Mission Param #6 : Reserved (set to 0)
        /// Mission Param #7 : Reserved (set to 0)
        /// </summary>
        /// <remarks>
        /// MAV_CMD_UAVCAN_GET_NODE_INFO
        /// </remarks>
        [Description(@"Commands the vehicle to respond with a sequence of messages UAVCAN_NODE_INFO, one message per every UAVCAN node that is online. Note that some of the response messages can be lost, which the receiver can detect easily by checking whether every received UAVCAN_NODE_STATUS has a matching message UAVCAN_NODE_INFO received earlier; if not, this command should be sent again in order to request re-transmission of the node information messages.")]
        UavcanGetNodeInfo = 5200,
        
        /// <summary>
        /// Deploy payload on a Lat / Lon / Alt position. This includes the navigation to reach the required release position and velocity.
        /// Mission Param #1 : Operation mode. 0: prepare single payload deploy (overwriting previous requests), but do not execute it. 1: execute payload deploy immediately (rejecting further deploy commands during execution, but allowing abort). 2: add payload deploy to existing deployment list.
        /// Mission Param #2 : Desired approach vector in degrees compass heading (0..360). A negative value indicates the system can define the approach vector at will.
        /// Mission Param #3 : Desired ground speed at release time. This can be overriden by the airframe in case it needs to meet minimum airspeed. A negative value indicates the system can define the ground speed at will.
        /// Mission Param #4 : Minimum altitude clearance to the release position in meters. A negative value indicates the system can define the clearance at will.
        /// Mission Param #5 : Latitude unscaled for MISSION_ITEM or in 1e7 degrees for MISSION_ITEM_INT
        /// Mission Param #6 : Longitude unscaled for MISSION_ITEM or in 1e7 degrees for MISSION_ITEM_INT
        /// Mission Param #7 : Altitude, in meters AMSL
        /// </summary>
        /// <remarks>
        /// MAV_CMD_PAYLOAD_PREPARE_DEPLOY
        /// </remarks>
        [Description("Deploy payload on a Lat / Lon / Alt position. This includes the navigation to rea" +
            "ch the required release position and velocity.")]
        PayloadPrepareDeploy = 30001,
        
        /// <summary>
        /// Control the payload deployment.
        /// Mission Param #1 : Operation mode. 0: Abort deployment, continue normal mission. 1: switch to payload deploment mode. 100: delete first payload deployment request. 101: delete all payload deployment requests.
        /// Mission Param #2 : Reserved
        /// Mission Param #3 : Reserved
        /// Mission Param #4 : Reserved
        /// Mission Param #5 : Reserved
        /// Mission Param #6 : Reserved
        /// Mission Param #7 : Reserved
        /// </summary>
        /// <remarks>
        /// MAV_CMD_PAYLOAD_CONTROL_DEPLOY
        /// </remarks>
        [Description("Control the payload deployment.")]
        PayloadControlDeploy = 30002,
        
        /// <summary>
        /// User defined waypoint item. Ground Station will show the Vehicle as flying through this item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : Latitude unscaled
        /// Mission Param #6 : Longitude unscaled
        /// Mission Param #7 : Altitude, in meters AMSL
        /// </summary>
        /// <remarks>
        /// MAV_CMD_WAYPOINT_USER_1
        /// </remarks>
        [Description("User defined waypoint item. Ground Station will show the Vehicle as flying throug" +
            "h this item.")]
        WaypointUser1 = 31000,
        
        /// <summary>
        /// User defined waypoint item. Ground Station will show the Vehicle as flying through this item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : Latitude unscaled
        /// Mission Param #6 : Longitude unscaled
        /// Mission Param #7 : Altitude, in meters AMSL
        /// </summary>
        /// <remarks>
        /// MAV_CMD_WAYPOINT_USER_2
        /// </remarks>
        [Description("User defined waypoint item. Ground Station will show the Vehicle as flying throug" +
            "h this item.")]
        WaypointUser2 = 31001,
        
        /// <summary>
        /// User defined waypoint item. Ground Station will show the Vehicle as flying through this item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : Latitude unscaled
        /// Mission Param #6 : Longitude unscaled
        /// Mission Param #7 : Altitude, in meters AMSL
        /// </summary>
        /// <remarks>
        /// MAV_CMD_WAYPOINT_USER_3
        /// </remarks>
        [Description("User defined waypoint item. Ground Station will show the Vehicle as flying throug" +
            "h this item.")]
        WaypointUser3 = 31002,
        
        /// <summary>
        /// User defined waypoint item. Ground Station will show the Vehicle as flying through this item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : Latitude unscaled
        /// Mission Param #6 : Longitude unscaled
        /// Mission Param #7 : Altitude, in meters AMSL
        /// </summary>
        /// <remarks>
        /// MAV_CMD_WAYPOINT_USER_4
        /// </remarks>
        [Description("User defined waypoint item. Ground Station will show the Vehicle as flying throug" +
            "h this item.")]
        WaypointUser4 = 31003,
        
        /// <summary>
        /// User defined waypoint item. Ground Station will show the Vehicle as flying through this item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : Latitude unscaled
        /// Mission Param #6 : Longitude unscaled
        /// Mission Param #7 : Altitude, in meters AMSL
        /// </summary>
        /// <remarks>
        /// MAV_CMD_WAYPOINT_USER_5
        /// </remarks>
        [Description("User defined waypoint item. Ground Station will show the Vehicle as flying throug" +
            "h this item.")]
        WaypointUser5 = 31004,
        
        /// <summary>
        /// User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : Latitude unscaled
        /// Mission Param #6 : Longitude unscaled
        /// Mission Param #7 : Altitude, in meters AMSL
        /// </summary>
        /// <remarks>
        /// MAV_CMD_SPATIAL_USER_1
        /// </remarks>
        [Description("User defined spatial item. Ground Station will not show the Vehicle as flying thr" +
            "ough this item. Example: ROI item.")]
        SpatialUser1 = 31005,
        
        /// <summary>
        /// User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : Latitude unscaled
        /// Mission Param #6 : Longitude unscaled
        /// Mission Param #7 : Altitude, in meters AMSL
        /// </summary>
        /// <remarks>
        /// MAV_CMD_SPATIAL_USER_2
        /// </remarks>
        [Description("User defined spatial item. Ground Station will not show the Vehicle as flying thr" +
            "ough this item. Example: ROI item.")]
        SpatialUser2 = 31006,
        
        /// <summary>
        /// User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : Latitude unscaled
        /// Mission Param #6 : Longitude unscaled
        /// Mission Param #7 : Altitude, in meters AMSL
        /// </summary>
        /// <remarks>
        /// MAV_CMD_SPATIAL_USER_3
        /// </remarks>
        [Description("User defined spatial item. Ground Station will not show the Vehicle as flying thr" +
            "ough this item. Example: ROI item.")]
        SpatialUser3 = 31007,
        
        /// <summary>
        /// User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : Latitude unscaled
        /// Mission Param #6 : Longitude unscaled
        /// Mission Param #7 : Altitude, in meters AMSL
        /// </summary>
        /// <remarks>
        /// MAV_CMD_SPATIAL_USER_4
        /// </remarks>
        [Description("User defined spatial item. Ground Station will not show the Vehicle as flying thr" +
            "ough this item. Example: ROI item.")]
        SpatialUser4 = 31008,
        
        /// <summary>
        /// User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : Latitude unscaled
        /// Mission Param #6 : Longitude unscaled
        /// Mission Param #7 : Altitude, in meters AMSL
        /// </summary>
        /// <remarks>
        /// MAV_CMD_SPATIAL_USER_5
        /// </remarks>
        [Description("User defined spatial item. Ground Station will not show the Vehicle as flying thr" +
            "ough this item. Example: ROI item.")]
        SpatialUser5 = 31009,
        
        /// <summary>
        /// User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : User defined
        /// Mission Param #6 : User defined
        /// Mission Param #7 : User defined
        /// </summary>
        /// <remarks>
        /// MAV_CMD_USER_1
        /// </remarks>
        [Description("User defined command. Ground Station will not show the Vehicle as flying through " +
            "this item. Example: MAV_CMD_DO_SET_PARAMETER item.")]
        User1 = 31010,
        
        /// <summary>
        /// User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : User defined
        /// Mission Param #6 : User defined
        /// Mission Param #7 : User defined
        /// </summary>
        /// <remarks>
        /// MAV_CMD_USER_2
        /// </remarks>
        [Description("User defined command. Ground Station will not show the Vehicle as flying through " +
            "this item. Example: MAV_CMD_DO_SET_PARAMETER item.")]
        User2 = 31011,
        
        /// <summary>
        /// User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : User defined
        /// Mission Param #6 : User defined
        /// Mission Param #7 : User defined
        /// </summary>
        /// <remarks>
        /// MAV_CMD_USER_3
        /// </remarks>
        [Description("User defined command. Ground Station will not show the Vehicle as flying through " +
            "this item. Example: MAV_CMD_DO_SET_PARAMETER item.")]
        User3 = 31012,
        
        /// <summary>
        /// User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : User defined
        /// Mission Param #6 : User defined
        /// Mission Param #7 : User defined
        /// </summary>
        /// <remarks>
        /// MAV_CMD_USER_4
        /// </remarks>
        [Description("User defined command. Ground Station will not show the Vehicle as flying through " +
            "this item. Example: MAV_CMD_DO_SET_PARAMETER item.")]
        User4 = 31013,
        
        /// <summary>
        /// User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.
        /// Mission Param #1 : User defined
        /// Mission Param #2 : User defined
        /// Mission Param #3 : User defined
        /// Mission Param #4 : User defined
        /// Mission Param #5 : User defined
        /// Mission Param #6 : User defined
        /// Mission Param #7 : User defined
        /// </summary>
        /// <remarks>
        /// MAV_CMD_USER_5
        /// </remarks>
        [Description("User defined command. Ground Station will not show the Vehicle as flying through " +
            "this item. Example: MAV_CMD_DO_SET_PARAMETER item.")]
        User5 = 31014,
    }
}
