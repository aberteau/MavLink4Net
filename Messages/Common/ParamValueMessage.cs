//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using MavLink4Net.Messages.Metadata;
using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// Emit the value of a onboard parameter. The inclusion of param_count and param_index in the message allows the recipient to keep track of received parameters and allows him to re-request missing parameters after a loss or timeout.
    /// </summary>
    /// <remarks>
    /// PARAM_VALUE
    /// </remarks>
    [MessageMetadata(Type=MavLink4Net.Messages.MavMessageType.ParamValue, Name="PARAM_VALUE", Description="Emit the value of a onboard parameter. The inclusion of param_count and param_ind" +
        "ex in the message allows the recipient to keep track of received parameters and " +
        "allows him to re-request missing parameters after a loss or timeout.")]
    public class ParamValueMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string
        /// </summary>
        /// <remarks>
        /// param_id
        /// </remarks>
        private char[] _paramId = new char[16];
        
        /// <summary>
        /// Onboard parameter value
        /// </summary>
        /// <remarks>
        /// param_value
        /// </remarks>
        private float _paramValue;
        
        /// <summary>
        /// Onboard parameter type: see the MAV_PARAM_TYPE enum for supported data types.
        /// </summary>
        /// <remarks>
        /// param_type
        /// </remarks>
        private MavLink4Net.Messages.Common.ParamType _paramType;
        
        /// <summary>
        /// Total number of onboard parameters
        /// </summary>
        /// <remarks>
        /// param_count
        /// </remarks>
        private ushort _paramCount;
        
        /// <summary>
        /// Index of this onboard parameter
        /// </summary>
        /// <remarks>
        /// param_index
        /// </remarks>
        private ushort _paramIndex;
        
        public ParamValueMessage() : 
                base(MavLink4Net.Messages.MavMessageType.ParamValue)
        {
        }
        
        /// <summary>
        /// Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string
        /// </summary>
        [MessageFieldMetadata(Name="param_id", Type="char[16]", Description="Onboard parameter id, terminated by NULL if the length is less than 16 human-read" +
            "able chars and WITHOUT null termination (NULL) byte if the length is exactly 16 " +
            "chars - applications have to provide 16+1 bytes storage if the ID is stored as s" +
            "tring")]
        public char[] ParamId
        {
            get
            {
                return this._paramId;
            }
            set
            {
                this._paramId = value;
            }
        }
        
        /// <summary>
        /// Onboard parameter value
        /// </summary>
        [MessageFieldMetadata(Name="param_value", Type="float", Description="Onboard parameter value")]
        public float ParamValue
        {
            get
            {
                return this._paramValue;
            }
            set
            {
                this._paramValue = value;
            }
        }
        
        /// <summary>
        /// Onboard parameter type: see the MAV_PARAM_TYPE enum for supported data types.
        /// </summary>
        [MessageFieldMetadata(Name="param_type", Type="MAV_PARAM_TYPE enum", Description="Onboard parameter type: see the MAV_PARAM_TYPE enum for supported data types.")]
        public MavLink4Net.Messages.Common.ParamType ParamType
        {
            get
            {
                return this._paramType;
            }
            set
            {
                this._paramType = value;
            }
        }
        
        /// <summary>
        /// Total number of onboard parameters
        /// </summary>
        [MessageFieldMetadata(Name="param_count", Type="uint16_t", Description="Total number of onboard parameters")]
        public ushort ParamCount
        {
            get
            {
                return this._paramCount;
            }
            set
            {
                this._paramCount = value;
            }
        }
        
        /// <summary>
        /// Index of this onboard parameter
        /// </summary>
        [MessageFieldMetadata(Name="param_index", Type="uint16_t", Description="Index of this onboard parameter")]
        public ushort ParamIndex
        {
            get
            {
                return this._paramIndex;
            }
            set
            {
                this._paramIndex = value;
            }
        }
    }
}
