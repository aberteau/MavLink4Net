//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// Report status of a command. Includes feedback whether the command was executed.
    /// </summary>
    /// <remarks>
    /// COMMAND_ACK
    /// </remarks>
    public class CommandAckMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// Command ID, as defined by MAV_CMD enum.
        /// </summary>
        /// <remarks>
        /// command
        /// </remarks>
        private Cmd _command;
        
        /// <summary>
        /// See MAV_RESULT enum
        /// </summary>
        /// <remarks>
        /// result
        /// </remarks>
        private Result _result;
        
        /// <summary>
        /// WIP: Also used as result_param1, it can be set with a enum containing the errors reasons of why the command was denied or the progress percentage or 255 if unknown the progress when result is MAV_RESULT_IN_PROGRESS.
        /// </summary>
        /// <remarks>
        /// progress
        /// </remarks>
        private byte _progress;
        
        /// <summary>
        /// WIP: Additional parameter of the result, example: which parameter of MAV_CMD_NAV_WAYPOINT caused it to be denied.
        /// </summary>
        /// <remarks>
        /// result_param2
        /// </remarks>
        private int _resultParam2;
        
        /// <summary>
        /// WIP: System which requested the command to be executed
        /// </summary>
        /// <remarks>
        /// target_system
        /// </remarks>
        private byte _targetSystem;
        
        /// <summary>
        /// WIP: Component which requested the command to be executed
        /// </summary>
        /// <remarks>
        /// target_component
        /// </remarks>
        private byte _targetComponent;
        
        public CommandAckMessage() : 
                base(MavLink4Net.Messages.MavMessageType.CommandAck, 205)
        {
        }
        
        /// <summary>
        /// Command ID, as defined by MAV_CMD enum.
        /// </summary>
        public Cmd Command
        {
            get
            {
                return this._command;
            }
            set
            {
                this._command = value;
            }
        }
        
        /// <summary>
        /// See MAV_RESULT enum
        /// </summary>
        public Result Result
        {
            get
            {
                return this._result;
            }
            set
            {
                this._result = value;
            }
        }
        
        /// <summary>
        /// WIP: Also used as result_param1, it can be set with a enum containing the errors reasons of why the command was denied or the progress percentage or 255 if unknown the progress when result is MAV_RESULT_IN_PROGRESS.
        /// </summary>
        public byte Progress
        {
            get
            {
                return this._progress;
            }
            set
            {
                this._progress = value;
            }
        }
        
        /// <summary>
        /// WIP: Additional parameter of the result, example: which parameter of MAV_CMD_NAV_WAYPOINT caused it to be denied.
        /// </summary>
        public int ResultParam2
        {
            get
            {
                return this._resultParam2;
            }
            set
            {
                this._resultParam2 = value;
            }
        }
        
        /// <summary>
        /// WIP: System which requested the command to be executed
        /// </summary>
        public byte TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                this._targetSystem = value;
            }
        }
        
        /// <summary>
        /// WIP: Component which requested the command to be executed
        /// </summary>
        public byte TargetComponent
        {
            get
            {
                return this._targetComponent;
            }
            set
            {
                this._targetComponent = value;
            }
        }
    }
}
