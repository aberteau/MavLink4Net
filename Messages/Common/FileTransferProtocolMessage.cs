//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using MavLink4Net.Messages.Metadata;
using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// File transfer message
    /// </summary>
    /// <remarks>
    /// FILE_TRANSFER_PROTOCOL
    /// </remarks>
    [MessageMetadata(Type=MavLink4Net.Messages.MavMessageType.FileTransferProtocol, Name="FILE_TRANSFER_PROTOCOL", Description="File transfer message")]
    public class FileTransferProtocolMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// Network ID (0 for broadcast)
        /// </summary>
        /// <remarks>
        /// target_network
        /// </remarks>
        private byte _targetNetwork;
        
        /// <summary>
        /// System ID (0 for broadcast)
        /// </summary>
        /// <remarks>
        /// target_system
        /// </remarks>
        private byte _targetSystem;
        
        /// <summary>
        /// Component ID (0 for broadcast)
        /// </summary>
        /// <remarks>
        /// target_component
        /// </remarks>
        private byte _targetComponent;
        
        /// <summary>
        /// Variable length payload. The length is defined by the remaining message length when subtracting the header and other fields.  The entire content of this block is opaque unless you understand any the encoding message_type.  The particular encoding used can be extension specific and might not always be documented as part of the mavlink specification.
        /// </summary>
        /// <remarks>
        /// payload
        /// </remarks>
        private byte[] _payload = new byte[251];
        
        public FileTransferProtocolMessage() : 
                base(MavLink4Net.Messages.MavMessageType.FileTransferProtocol, 84)
        {
        }
        
        /// <summary>
        /// Network ID (0 for broadcast)
        /// </summary>
        [MessageFieldMetadata(Name="target_network", Type="uint8_t", Description="Network ID (0 for broadcast)")]
        public byte TargetNetwork
        {
            get
            {
                return this._targetNetwork;
            }
            set
            {
                this._targetNetwork = value;
            }
        }
        
        /// <summary>
        /// System ID (0 for broadcast)
        /// </summary>
        [MessageFieldMetadata(Name="target_system", Type="uint8_t", Description="System ID (0 for broadcast)")]
        public byte TargetSystem
        {
            get
            {
                return this._targetSystem;
            }
            set
            {
                this._targetSystem = value;
            }
        }
        
        /// <summary>
        /// Component ID (0 for broadcast)
        /// </summary>
        [MessageFieldMetadata(Name="target_component", Type="uint8_t", Description="Component ID (0 for broadcast)")]
        public byte TargetComponent
        {
            get
            {
                return this._targetComponent;
            }
            set
            {
                this._targetComponent = value;
            }
        }
        
        /// <summary>
        /// Variable length payload. The length is defined by the remaining message length when subtracting the header and other fields.  The entire content of this block is opaque unless you understand any the encoding message_type.  The particular encoding used can be extension specific and might not always be documented as part of the mavlink specification.
        /// </summary>
        [MessageFieldMetadata(Name="payload", Type="uint8_t[251]", Description=@"Variable length payload. The length is defined by the remaining message length when subtracting the header and other fields.  The entire content of this block is opaque unless you understand any the encoding message_type.  The particular encoding used can be extension specific and might not always be documented as part of the mavlink specification.")]
        public byte[] Payload
        {
            get
            {
                return this._payload;
            }
            set
            {
                this._payload = value;
            }
        }
    }
}
