//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// The scaled values of the RC channels received. (-100%) -10000, (0%) 0, (100%) 10000. Channels that are inactive should be set to UINT16_MAX.
    /// </summary>
    /// <remarks>
    /// RC_CHANNELS_SCALED
    /// </remarks>
    public class RcChannelsScaledMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// Timestamp (milliseconds since system boot)
        /// </summary>
        /// <remarks>
        /// time_boot_ms
        /// </remarks>
        private uint _timeBootMs;
        
        /// <summary>
        /// Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.
        /// </summary>
        /// <remarks>
        /// port
        /// </remarks>
        private byte _port;
        
        /// <summary>
        /// RC channel 1 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        /// <remarks>
        /// chan1_scaled
        /// </remarks>
        private short _chan1Scaled;
        
        /// <summary>
        /// RC channel 2 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        /// <remarks>
        /// chan2_scaled
        /// </remarks>
        private short _chan2Scaled;
        
        /// <summary>
        /// RC channel 3 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        /// <remarks>
        /// chan3_scaled
        /// </remarks>
        private short _chan3Scaled;
        
        /// <summary>
        /// RC channel 4 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        /// <remarks>
        /// chan4_scaled
        /// </remarks>
        private short _chan4Scaled;
        
        /// <summary>
        /// RC channel 5 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        /// <remarks>
        /// chan5_scaled
        /// </remarks>
        private short _chan5Scaled;
        
        /// <summary>
        /// RC channel 6 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        /// <remarks>
        /// chan6_scaled
        /// </remarks>
        private short _chan6Scaled;
        
        /// <summary>
        /// RC channel 7 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        /// <remarks>
        /// chan7_scaled
        /// </remarks>
        private short _chan7Scaled;
        
        /// <summary>
        /// RC channel 8 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        /// <remarks>
        /// chan8_scaled
        /// </remarks>
        private short _chan8Scaled;
        
        /// <summary>
        /// Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.
        /// </summary>
        /// <remarks>
        /// rssi
        /// </remarks>
        private byte _rssi;
        
        public RcChannelsScaledMessage() : 
                base(MavLink4Net.Messages.MavMessageType.RcChannelsScaled, 237)
        {
        }
        
        /// <summary>
        /// Timestamp (milliseconds since system boot)
        /// </summary>
        public uint TimeBootMs
        {
            get
            {
                return this._timeBootMs;
            }
            set
            {
                this._timeBootMs = value;
            }
        }
        
        /// <summary>
        /// Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.
        /// </summary>
        public byte Port
        {
            get
            {
                return this._port;
            }
            set
            {
                this._port = value;
            }
        }
        
        /// <summary>
        /// RC channel 1 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        public short Chan1Scaled
        {
            get
            {
                return this._chan1Scaled;
            }
            set
            {
                this._chan1Scaled = value;
            }
        }
        
        /// <summary>
        /// RC channel 2 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        public short Chan2Scaled
        {
            get
            {
                return this._chan2Scaled;
            }
            set
            {
                this._chan2Scaled = value;
            }
        }
        
        /// <summary>
        /// RC channel 3 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        public short Chan3Scaled
        {
            get
            {
                return this._chan3Scaled;
            }
            set
            {
                this._chan3Scaled = value;
            }
        }
        
        /// <summary>
        /// RC channel 4 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        public short Chan4Scaled
        {
            get
            {
                return this._chan4Scaled;
            }
            set
            {
                this._chan4Scaled = value;
            }
        }
        
        /// <summary>
        /// RC channel 5 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        public short Chan5Scaled
        {
            get
            {
                return this._chan5Scaled;
            }
            set
            {
                this._chan5Scaled = value;
            }
        }
        
        /// <summary>
        /// RC channel 6 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        public short Chan6Scaled
        {
            get
            {
                return this._chan6Scaled;
            }
            set
            {
                this._chan6Scaled = value;
            }
        }
        
        /// <summary>
        /// RC channel 7 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        public short Chan7Scaled
        {
            get
            {
                return this._chan7Scaled;
            }
            set
            {
                this._chan7Scaled = value;
            }
        }
        
        /// <summary>
        /// RC channel 8 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.
        /// </summary>
        public short Chan8Scaled
        {
            get
            {
                return this._chan8Scaled;
            }
            set
            {
                this._chan8Scaled = value;
            }
        }
        
        /// <summary>
        /// Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.
        /// </summary>
        public byte Rssi
        {
            get
            {
                return this._rssi;
            }
            set
            {
                this._rssi = value;
            }
        }
    }
}
