//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// The location and information of an ADSB vehicle
    /// </summary>
    /// <remarks>
    /// ADSB_VEHICLE
    /// </remarks>
    public class AdsbVehicleMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// ICAO address
        /// </summary>
        /// <remarks>
        /// ICAO_address
        /// </remarks>
        private uint _icaoAddress;
        
        /// <summary>
        /// Latitude, expressed as degrees * 1E7
        /// </summary>
        /// <remarks>
        /// lat
        /// </remarks>
        private int _lat;
        
        /// <summary>
        /// Longitude, expressed as degrees * 1E7
        /// </summary>
        /// <remarks>
        /// lon
        /// </remarks>
        private int _lon;
        
        /// <summary>
        /// Type from ADSB_ALTITUDE_TYPE enum
        /// </summary>
        /// <remarks>
        /// altitude_type
        /// </remarks>
        private AdsbAltitudeType _altitudeType;
        
        /// <summary>
        /// Altitude(ASL) in millimeters
        /// </summary>
        /// <remarks>
        /// altitude
        /// </remarks>
        private int _altitude;
        
        /// <summary>
        /// Course over ground in centidegrees
        /// </summary>
        /// <remarks>
        /// heading
        /// </remarks>
        private ushort _heading;
        
        /// <summary>
        /// The horizontal velocity in centimeters/second
        /// </summary>
        /// <remarks>
        /// hor_velocity
        /// </remarks>
        private ushort _horVelocity;
        
        /// <summary>
        /// The vertical velocity in centimeters/second, positive is up
        /// </summary>
        /// <remarks>
        /// ver_velocity
        /// </remarks>
        private short _verVelocity;
        
        /// <summary>
        /// The callsign, 8+null
        /// </summary>
        /// <remarks>
        /// callsign
        /// </remarks>
        private char[] _callsign = new char[9];
        
        /// <summary>
        /// Type from ADSB_EMITTER_TYPE enum
        /// </summary>
        /// <remarks>
        /// emitter_type
        /// </remarks>
        private AdsbEmitterType _emitterType;
        
        /// <summary>
        /// Time since last communication in seconds
        /// </summary>
        /// <remarks>
        /// tslc
        /// </remarks>
        private byte _tslc;
        
        /// <summary>
        /// Flags to indicate various statuses including valid data fields
        /// </summary>
        /// <remarks>
        /// flags
        /// </remarks>
        private AdsbFlags _flags;
        
        /// <summary>
        /// Squawk code
        /// </summary>
        /// <remarks>
        /// squawk
        /// </remarks>
        private ushort _squawk;
        
        public AdsbVehicleMessage() : 
                base(MavLink4Net.Messages.MavMessageType.AdsbVehicle, 184)
        {
        }
        
        /// <summary>
        /// ICAO address
        /// </summary>
        public uint IcaoAddress
        {
            get
            {
                return this._icaoAddress;
            }
            set
            {
                this._icaoAddress = value;
            }
        }
        
        /// <summary>
        /// Latitude, expressed as degrees * 1E7
        /// </summary>
        public int Lat
        {
            get
            {
                return this._lat;
            }
            set
            {
                this._lat = value;
            }
        }
        
        /// <summary>
        /// Longitude, expressed as degrees * 1E7
        /// </summary>
        public int Lon
        {
            get
            {
                return this._lon;
            }
            set
            {
                this._lon = value;
            }
        }
        
        /// <summary>
        /// Type from ADSB_ALTITUDE_TYPE enum
        /// </summary>
        public AdsbAltitudeType AltitudeType
        {
            get
            {
                return this._altitudeType;
            }
            set
            {
                this._altitudeType = value;
            }
        }
        
        /// <summary>
        /// Altitude(ASL) in millimeters
        /// </summary>
        public int Altitude
        {
            get
            {
                return this._altitude;
            }
            set
            {
                this._altitude = value;
            }
        }
        
        /// <summary>
        /// Course over ground in centidegrees
        /// </summary>
        public ushort Heading
        {
            get
            {
                return this._heading;
            }
            set
            {
                this._heading = value;
            }
        }
        
        /// <summary>
        /// The horizontal velocity in centimeters/second
        /// </summary>
        public ushort HorVelocity
        {
            get
            {
                return this._horVelocity;
            }
            set
            {
                this._horVelocity = value;
            }
        }
        
        /// <summary>
        /// The vertical velocity in centimeters/second, positive is up
        /// </summary>
        public short VerVelocity
        {
            get
            {
                return this._verVelocity;
            }
            set
            {
                this._verVelocity = value;
            }
        }
        
        /// <summary>
        /// The callsign, 8+null
        /// </summary>
        public char[] Callsign
        {
            get
            {
                return this._callsign;
            }
            set
            {
                this._callsign = value;
            }
        }
        
        /// <summary>
        /// Type from ADSB_EMITTER_TYPE enum
        /// </summary>
        public AdsbEmitterType EmitterType
        {
            get
            {
                return this._emitterType;
            }
            set
            {
                this._emitterType = value;
            }
        }
        
        /// <summary>
        /// Time since last communication in seconds
        /// </summary>
        public byte Tslc
        {
            get
            {
                return this._tslc;
            }
            set
            {
                this._tslc = value;
            }
        }
        
        /// <summary>
        /// Flags to indicate various statuses including valid data fields
        /// </summary>
        public AdsbFlags Flags
        {
            get
            {
                return this._flags;
            }
            set
            {
                this._flags = value;
            }
        }
        
        /// <summary>
        /// Squawk code
        /// </summary>
        public ushort Squawk
        {
            get
            {
                return this._squawk;
            }
            set
            {
                this._squawk = value;
            }
        }
    }
}
