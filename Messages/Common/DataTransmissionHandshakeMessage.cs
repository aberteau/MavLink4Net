//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using MavLink4Net.Messages.Metadata;
using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// DATA_TRANSMISSION_HANDSHAKE
    /// </remarks>
    [MessageMetadata(Type=MavLink4Net.Messages.MavMessageType.DataTransmissionHandshake, Name="DATA_TRANSMISSION_HANDSHAKE", Description=null)]
    public class DataTransmissionHandshakeMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// type of requested/acknowledged data (as defined in ENUM DATA_TYPES in mavlink/include/mavlink_types.h)
        /// </summary>
        /// <remarks>
        /// type
        /// </remarks>
        private byte _type;
        
        /// <summary>
        /// total data size in bytes (set on ACK only)
        /// </summary>
        /// <remarks>
        /// size
        /// </remarks>
        private uint _size;
        
        /// <summary>
        /// Width of a matrix or image
        /// </summary>
        /// <remarks>
        /// width
        /// </remarks>
        private ushort _width;
        
        /// <summary>
        /// Height of a matrix or image
        /// </summary>
        /// <remarks>
        /// height
        /// </remarks>
        private ushort _height;
        
        /// <summary>
        /// number of packets beeing sent (set on ACK only)
        /// </summary>
        /// <remarks>
        /// packets
        /// </remarks>
        private ushort _packets;
        
        /// <summary>
        /// payload size per packet (normally 253 byte, see DATA field size in message ENCAPSULATED_DATA) (set on ACK only)
        /// </summary>
        /// <remarks>
        /// payload
        /// </remarks>
        private byte _payload;
        
        /// <summary>
        /// JPEG quality out of [1,100]
        /// </summary>
        /// <remarks>
        /// jpg_quality
        /// </remarks>
        private byte _jpgQuality;
        
        public DataTransmissionHandshakeMessage() : 
                base(MavLink4Net.Messages.MavMessageType.DataTransmissionHandshake, 29)
        {
        }
        
        /// <summary>
        /// type of requested/acknowledged data (as defined in ENUM DATA_TYPES in mavlink/include/mavlink_types.h)
        /// </summary>
        [MessageFieldMetadata(Name="type", Type="uint8_t", Description="type of requested/acknowledged data (as defined in ENUM DATA_TYPES in mavlink/inc" +
            "lude/mavlink_types.h)")]
        public byte Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        /// <summary>
        /// total data size in bytes (set on ACK only)
        /// </summary>
        [MessageFieldMetadata(Name="size", Type="uint32_t", Units="bytes", Description="total data size in bytes (set on ACK only)")]
        public uint Size
        {
            get
            {
                return this._size;
            }
            set
            {
                this._size = value;
            }
        }
        
        /// <summary>
        /// Width of a matrix or image
        /// </summary>
        [MessageFieldMetadata(Name="width", Type="uint16_t", Description="Width of a matrix or image")]
        public ushort Width
        {
            get
            {
                return this._width;
            }
            set
            {
                this._width = value;
            }
        }
        
        /// <summary>
        /// Height of a matrix or image
        /// </summary>
        [MessageFieldMetadata(Name="height", Type="uint16_t", Description="Height of a matrix or image")]
        public ushort Height
        {
            get
            {
                return this._height;
            }
            set
            {
                this._height = value;
            }
        }
        
        /// <summary>
        /// number of packets beeing sent (set on ACK only)
        /// </summary>
        [MessageFieldMetadata(Name="packets", Type="uint16_t", Description="number of packets beeing sent (set on ACK only)")]
        public ushort Packets
        {
            get
            {
                return this._packets;
            }
            set
            {
                this._packets = value;
            }
        }
        
        /// <summary>
        /// payload size per packet (normally 253 byte, see DATA field size in message ENCAPSULATED_DATA) (set on ACK only)
        /// </summary>
        [MessageFieldMetadata(Name="payload", Type="uint8_t", Units="bytes", Description="payload size per packet (normally 253 byte, see DATA field size in message ENCAPS" +
            "ULATED_DATA) (set on ACK only)")]
        public byte Payload
        {
            get
            {
                return this._payload;
            }
            set
            {
                this._payload = value;
            }
        }
        
        /// <summary>
        /// JPEG quality out of [1,100]
        /// </summary>
        [MessageFieldMetadata(Name="jpg_quality", Type="uint8_t", Units="%", Description="JPEG quality out of [1,100]")]
        public byte JpgQuality
        {
            get
            {
                return this._jpgQuality;
            }
            set
            {
                this._jpgQuality = value;
            }
        }
    }
}
