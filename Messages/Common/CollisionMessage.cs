//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using MavLink4Net.Messages.Metadata;
using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// Information about a potential collision
    /// </summary>
    /// <remarks>
    /// COLLISION
    /// </remarks>
    [MessageMetadata(Type=MavLink4Net.Messages.MavMessageType.Collision, Name="COLLISION", Description="Information about a potential collision")]
    public class CollisionMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// Collision data source
        /// </summary>
        /// <remarks>
        /// src
        /// </remarks>
        private MavLink4Net.Messages.Common.CollisionSrc _src;
        
        /// <summary>
        /// Unique identifier, domain based on src field
        /// </summary>
        /// <remarks>
        /// id
        /// </remarks>
        private uint _id;
        
        /// <summary>
        /// Action that is being taken to avoid this collision
        /// </summary>
        /// <remarks>
        /// action
        /// </remarks>
        private MavLink4Net.Messages.Common.CollisionAction _action;
        
        /// <summary>
        /// How concerned the aircraft is about this collision
        /// </summary>
        /// <remarks>
        /// threat_level
        /// </remarks>
        private MavLink4Net.Messages.Common.CollisionThreatLevel _threatLevel;
        
        /// <summary>
        /// Estimated time until collision occurs (seconds)
        /// </summary>
        /// <remarks>
        /// time_to_minimum_delta
        /// </remarks>
        private float _timeToMinimumDelta;
        
        /// <summary>
        /// Closest vertical distance in meters between vehicle and object
        /// </summary>
        /// <remarks>
        /// altitude_minimum_delta
        /// </remarks>
        private float _altitudeMinimumDelta;
        
        /// <summary>
        /// Closest horizontal distance in meteres between vehicle and object
        /// </summary>
        /// <remarks>
        /// horizontal_minimum_delta
        /// </remarks>
        private float _horizontalMinimumDelta;
        
        public CollisionMessage() : 
                base(MavLink4Net.Messages.MavMessageType.Collision)
        {
        }
        
        /// <summary>
        /// Collision data source
        /// </summary>
        [MessageFieldMetadata(Name="src", Type="MAV_COLLISION_SRC enum", Description="Collision data source")]
        public MavLink4Net.Messages.Common.CollisionSrc Src
        {
            get
            {
                return this._src;
            }
            set
            {
                this._src = value;
            }
        }
        
        /// <summary>
        /// Unique identifier, domain based on src field
        /// </summary>
        [MessageFieldMetadata(Name="id", Type="uint32_t", Description="Unique identifier, domain based on src field")]
        public uint Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        /// <summary>
        /// Action that is being taken to avoid this collision
        /// </summary>
        [MessageFieldMetadata(Name="action", Type="MAV_COLLISION_ACTION enum", Description="Action that is being taken to avoid this collision")]
        public MavLink4Net.Messages.Common.CollisionAction Action
        {
            get
            {
                return this._action;
            }
            set
            {
                this._action = value;
            }
        }
        
        /// <summary>
        /// How concerned the aircraft is about this collision
        /// </summary>
        [MessageFieldMetadata(Name="threat_level", Type="MAV_COLLISION_THREAT_LEVEL enum", Description="How concerned the aircraft is about this collision")]
        public MavLink4Net.Messages.Common.CollisionThreatLevel ThreatLevel
        {
            get
            {
                return this._threatLevel;
            }
            set
            {
                this._threatLevel = value;
            }
        }
        
        /// <summary>
        /// Estimated time until collision occurs (seconds)
        /// </summary>
        [MessageFieldMetadata(Name="time_to_minimum_delta", Type="float", Units="s", Description="Estimated time until collision occurs (seconds)")]
        public float TimeToMinimumDelta
        {
            get
            {
                return this._timeToMinimumDelta;
            }
            set
            {
                this._timeToMinimumDelta = value;
            }
        }
        
        /// <summary>
        /// Closest vertical distance in meters between vehicle and object
        /// </summary>
        [MessageFieldMetadata(Name="altitude_minimum_delta", Type="float", Units="m", Description="Closest vertical distance in meters between vehicle and object")]
        public float AltitudeMinimumDelta
        {
            get
            {
                return this._altitudeMinimumDelta;
            }
            set
            {
                this._altitudeMinimumDelta = value;
            }
        }
        
        /// <summary>
        /// Closest horizontal distance in meteres between vehicle and object
        /// </summary>
        [MessageFieldMetadata(Name="horizontal_minimum_delta", Type="float", Units="m", Description="Closest horizontal distance in meteres between vehicle and object")]
        public float HorizontalMinimumDelta
        {
            get
            {
                return this._horizontalMinimumDelta;
            }
            set
            {
                this._horizontalMinimumDelta = value;
            }
        }
    }
}
