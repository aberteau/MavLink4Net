//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using MavLink4Net.Messages.Metadata;
using System;
using System.ComponentModel;


namespace MavLink4Net.Messages.Common
{
    
    
    /// <summary>
    /// Battery information
    /// </summary>
    /// <remarks>
    /// BATTERY_STATUS
    /// </remarks>
    [MessageMetadata(Type=MavLink4Net.Messages.MavMessageType.BatteryStatus, Name="BATTERY_STATUS", Description="Battery information")]
    public class BatteryStatusMessage : MavLink4Net.Messages.Message
    {
        
        /// <summary>
        /// Battery ID
        /// </summary>
        /// <remarks>
        /// id
        /// </remarks>
        private byte _id;
        
        /// <summary>
        /// Function of the battery
        /// </summary>
        /// <remarks>
        /// battery_function
        /// </remarks>
        private MavLink4Net.Messages.Common.BatteryFunction _batteryFunction;
        
        /// <summary>
        /// Type (chemistry) of the battery
        /// </summary>
        /// <remarks>
        /// type
        /// </remarks>
        private MavLink4Net.Messages.Common.BatteryType _type;
        
        /// <summary>
        /// Temperature of the battery in centi-degrees celsius. INT16_MAX for unknown temperature.
        /// </summary>
        /// <remarks>
        /// temperature
        /// </remarks>
        private short _temperature;
        
        /// <summary>
        /// Battery voltage of cells, in millivolts (1 = 1 millivolt). Cells above the valid cell count for this battery should have the UINT16_MAX value.
        /// </summary>
        /// <remarks>
        /// voltages
        /// </remarks>
        private ushort[] _voltages = new ushort[10];
        
        /// <summary>
        /// Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not measure the current
        /// </summary>
        /// <remarks>
        /// current_battery
        /// </remarks>
        private short _currentBattery;
        
        /// <summary>
        /// Consumed charge, in milliampere hours (1 = 1 mAh), -1: autopilot does not provide mAh consumption estimate
        /// </summary>
        /// <remarks>
        /// current_consumed
        /// </remarks>
        private int _currentConsumed;
        
        /// <summary>
        /// Consumed energy, in HectoJoules (intergrated U*I*dt)  (1 = 100 Joule), -1: autopilot does not provide energy consumption estimate
        /// </summary>
        /// <remarks>
        /// energy_consumed
        /// </remarks>
        private int _energyConsumed;
        
        /// <summary>
        /// Remaining battery energy: (0%: 0, 100%: 100), -1: autopilot does not estimate the remaining battery
        /// </summary>
        /// <remarks>
        /// battery_remaining
        /// </remarks>
        private sbyte _batteryRemaining;
        
        public BatteryStatusMessage() : 
                base(MavLink4Net.Messages.MavMessageType.BatteryStatus, 154)
        {
        }
        
        /// <summary>
        /// Battery ID
        /// </summary>
        [MessageFieldMetadata(Name="id", Type="uint8_t", Description="Battery ID")]
        public byte Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }
        
        /// <summary>
        /// Function of the battery
        /// </summary>
        [MessageFieldMetadata(Name="battery_function", Type="MAV_BATTERY_FUNCTION enum", Description="Function of the battery")]
        public MavLink4Net.Messages.Common.BatteryFunction BatteryFunction
        {
            get
            {
                return this._batteryFunction;
            }
            set
            {
                this._batteryFunction = value;
            }
        }
        
        /// <summary>
        /// Type (chemistry) of the battery
        /// </summary>
        [MessageFieldMetadata(Name="type", Type="MAV_BATTERY_TYPE enum", Description="Type (chemistry) of the battery")]
        public MavLink4Net.Messages.Common.BatteryType Type
        {
            get
            {
                return this._type;
            }
            set
            {
                this._type = value;
            }
        }
        
        /// <summary>
        /// Temperature of the battery in centi-degrees celsius. INT16_MAX for unknown temperature.
        /// </summary>
        [MessageFieldMetadata(Name="temperature", Type="int16_t", Units="cdegC", Description="Temperature of the battery in centi-degrees celsius. INT16_MAX for unknown temper" +
            "ature.")]
        public short Temperature
        {
            get
            {
                return this._temperature;
            }
            set
            {
                this._temperature = value;
            }
        }
        
        /// <summary>
        /// Battery voltage of cells, in millivolts (1 = 1 millivolt). Cells above the valid cell count for this battery should have the UINT16_MAX value.
        /// </summary>
        [MessageFieldMetadata(Name="voltages", Type="uint16_t[10]", Units="mV", Description="Battery voltage of cells, in millivolts (1 = 1 millivolt). Cells above the valid " +
            "cell count for this battery should have the UINT16_MAX value.")]
        public ushort[] Voltages
        {
            get
            {
                return this._voltages;
            }
            set
            {
                this._voltages = value;
            }
        }
        
        /// <summary>
        /// Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not measure the current
        /// </summary>
        [MessageFieldMetadata(Name="current_battery", Type="int16_t", Units="cA", Description="Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not " +
            "measure the current")]
        public short CurrentBattery
        {
            get
            {
                return this._currentBattery;
            }
            set
            {
                this._currentBattery = value;
            }
        }
        
        /// <summary>
        /// Consumed charge, in milliampere hours (1 = 1 mAh), -1: autopilot does not provide mAh consumption estimate
        /// </summary>
        [MessageFieldMetadata(Name="current_consumed", Type="int32_t", Units="mAh", Description="Consumed charge, in milliampere hours (1 = 1 mAh), -1: autopilot does not provide" +
            " mAh consumption estimate")]
        public int CurrentConsumed
        {
            get
            {
                return this._currentConsumed;
            }
            set
            {
                this._currentConsumed = value;
            }
        }
        
        /// <summary>
        /// Consumed energy, in HectoJoules (intergrated U*I*dt)  (1 = 100 Joule), -1: autopilot does not provide energy consumption estimate
        /// </summary>
        [MessageFieldMetadata(Name="energy_consumed", Type="int32_t", Units="hJ", Description="Consumed energy, in HectoJoules (intergrated U*I*dt)  (1 = 100 Joule), -1: autopi" +
            "lot does not provide energy consumption estimate")]
        public int EnergyConsumed
        {
            get
            {
                return this._energyConsumed;
            }
            set
            {
                this._energyConsumed = value;
            }
        }
        
        /// <summary>
        /// Remaining battery energy: (0%: 0, 100%: 100), -1: autopilot does not estimate the remaining battery
        /// </summary>
        [MessageFieldMetadata(Name="battery_remaining", Type="int8_t", Units="%", Description="Remaining battery energy: (0%: 0, 100%: 100), -1: autopilot does not estimate the" +
            " remaining battery")]
        public sbyte BatteryRemaining
        {
            get
            {
                return this._batteryRemaining;
            }
            set
            {
                this._batteryRemaining = value;
            }
        }
    }
}
